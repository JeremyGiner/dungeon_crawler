// Generated by Haxe 4.1.4
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = "EReg";
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = "HxOverrides";
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.keyValueIter = function(a) {
	return new haxe_iterators_ArrayKeyValueIterator(a);
};
HxOverrides.now = function() {
	return Date.now();
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
IntIterator.__name__ = "IntIterator";
IntIterator.prototype = {
	__class__: IntIterator
};
var Lambda = function() { };
Lambda.__name__ = "Lambda";
Lambda.array = function(it) {
	var a = [];
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
var Main = function() { };
Main.__name__ = "Main";
Main.main = function() {
	var oGame = new game_Game();
	console.log("src/Main.hx:41:",haxe_Resource.listNames());
	var aTemplate = [];
	var _g = 0;
	var _g1 = haxe_Resource.listNames();
	while(_g < _g1.length) {
		var sRes = _g1[_g];
		++_g;
		aTemplate.push({ key : sRes, template : haxe_Resource.getString(sRes)});
	}
	var _g = new haxe_ds_StringMap();
	var value = new view_loader_GameStateLoader(oGame);
	_g.h["game"] = value;
	var oUnveil = new unveil_Unveil(_g,[{ id : "main", path_pattern : new RegExp("^\\/.*$"), page_data : null, model_load : ["game"]}],aTemplate);
	new client_controller_CombatNextController(oGame,oGame.getPlayerAr()[0],oUnveil);
	new client_controller_EndSetupPhaseController(oGame,oGame.getPlayerAr()[0],oUnveil);
	new client_controller_DragStyleController();
	new client_controller_DragEngagementController(oGame,oGame.getPlayerAr()[0],oUnveil);
	new client_controller_RoomMoveController(oGame,oGame.getPlayerAr()[0],oUnveil);
};
Math.__name__ = "Math";
var Reflect = function() { };
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.copy = function(o) {
	if(o == null) {
		return null;
	}
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
var Std = function() { };
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var nc = x.charCodeAt(i + 1);
				var v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = "StringTools";
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var unveil_controller_ClickController = function(sId) {
	this._sId = sId;
	this._bProcessing = false;
	window.document.addEventListener("click",$bind(this,this.process));
};
unveil_controller_ClickController.__name__ = "unveil.controller.ClickController";
unveil_controller_ClickController.prototype = {
	process: function(oEvent) {
		if(this._bProcessing) {
			return;
		}
		this._bProcessing = true;
		this._process(oEvent);
		this._bProcessing = false;
	}
	,_process: function(oEvent) {
		var oElement = oEvent.target;
		oElement = oElement.closest("[data-click=\"" + this._sId + "\"]");
		if(oElement == null) {
			return;
		}
		this._onClick(oElement);
	}
	,_onClick: function(oElement) {
		throw haxe_Exception.thrown("override me");
	}
	,__class__: unveil_controller_ClickController
};
var client_controller_CombatNextController = function(oGame,oPlayer,oUnveil) {
	this._oGame = oGame;
	this._oCurrentPlayer = oPlayer;
	this._oUnveil = oUnveil;
	unveil_controller_ClickController.call(this,"combat_next");
};
client_controller_CombatNextController.__name__ = "client.controller.CombatNextController";
client_controller_CombatNextController.__super__ = unveil_controller_ClickController;
client_controller_CombatNextController.prototype = $extend(unveil_controller_ClickController.prototype,{
	_onClick: function(oElement) {
		this._oGame.combatTurnEnd(this._oCurrentPlayer);
		this._oUnveil.getPageController().goto("/");
	}
	,__class__: client_controller_CombatNextController
});
var client_controller_DragEngagementController = function(oGame,oPlayer,oUnveil) {
	var _gthis = this;
	this._oGame = oGame;
	this._oCurrentPlayer = oPlayer;
	this._oUnveil = oUnveil;
	window.document.addEventListener("dragover",function(event) {
		event.preventDefault();
	},false);
	window.document.addEventListener("dragstart",function(event) {
		_gthis._oDragged = event.target;
	});
	window.document.addEventListener("drop",function(event) {
		event.preventDefault();
		var oTarget = event.target;
		oTarget = oTarget.closest(".js-dropzone");
		if(oTarget == null) {
			return;
		}
		var a = _gthis._oDragged.dataset.engage_id.split("-");
		if(oTarget.dataset.dropAction == "set_engagement") {
			_gthis._oCurrentPlayer.getFight().setEngagement(Std.parseInt(a[0]),Std.parseInt(a[1]),Std.parseInt(oTarget.dataset.engage_id));
		}
		if(oTarget.dataset.dropAction == "swap_engagement") {
			var b = oTarget.dataset.engage_id.split("-");
			_gthis._oCurrentPlayer.getFight().swapEngagement(Std.parseInt(a[0]),Std.parseInt(a[1]),Std.parseInt(b[0]),Std.parseInt(b[1]));
		}
		_gthis._oUnveil.getPageController().goto("/");
	});
};
client_controller_DragEngagementController.__name__ = "client.controller.DragEngagementController";
client_controller_DragEngagementController.prototype = {
	__class__: client_controller_DragEngagementController
};
var client_controller_DragStyleController = function() {
	window.document.addEventListener("dragenter",function(event) {
		if(!((event.target) instanceof HTMLElement)) {
			return;
		}
		var oTarget = event.target;
		oTarget = oTarget.closest(".js-dropzone");
		if(oTarget == null) {
			return;
		}
		if(oTarget.classList.contains("drag-hover")) {
			return;
		}
		oTarget.classList.add("drag-hover");
	});
	window.document.addEventListener("dragleave",function(event) {
		if(!((event.target) instanceof HTMLElement)) {
			return;
		}
		var oTarget = event.target;
		if(!oTarget.classList.contains("js-dropzone")) {
			return;
		}
		oTarget.classList.remove("drag-hover");
	});
};
client_controller_DragStyleController.__name__ = "client.controller.DragStyleController";
client_controller_DragStyleController.prototype = {
	__class__: client_controller_DragStyleController
};
var client_controller_EndSetupPhaseController = function(oGame,oPlayer,oUnveil) {
	this._oGame = oGame;
	this._oCurrentPlayer = oPlayer;
	this._oUnveil = oUnveil;
	unveil_controller_ClickController.call(this,"end_setup");
};
client_controller_EndSetupPhaseController.__name__ = "client.controller.EndSetupPhaseController";
client_controller_EndSetupPhaseController.__super__ = unveil_controller_ClickController;
client_controller_EndSetupPhaseController.prototype = $extend(unveil_controller_ClickController.prototype,{
	_onClick: function(oElement) {
		this._oGame.endTurnSetup();
		this._oUnveil.getPageController().goto("/");
	}
	,__class__: client_controller_EndSetupPhaseController
});
var client_controller_RoomMoveController = function(oGame,oPlayer,oUnveil) {
	this._oGame = oGame;
	this._oCurrentPlayer = oPlayer;
	this._oUnveil = oUnveil;
	unveil_controller_ClickController.call(this,"room_move");
};
client_controller_RoomMoveController.__name__ = "client.controller.RoomMoveController";
client_controller_RoomMoveController.__super__ = unveil_controller_ClickController;
client_controller_RoomMoveController.prototype = $extend(unveil_controller_ClickController.prototype,{
	_onClick: function(oElement) {
		var oRoom = this._oGame.getWorldmap().getRoom(Std.parseInt(oElement.dataset.room));
		if(oRoom == null) {
			throw haxe_Exception.thrown("!!!");
		}
		this._oGame.move(this._oCurrentPlayer,oRoom);
		this._oUnveil.getPageController().goto("/");
	}
	,__class__: client_controller_RoomMoveController
});
var sweet_functor_IFunction = function() { };
sweet_functor_IFunction.__name__ = "sweet.functor.IFunction";
sweet_functor_IFunction.__isInterface__ = true;
sweet_functor_IFunction.prototype = {
	__class__: sweet_functor_IFunction
};
var client_view_MonsterTypeIcon = function() {
};
client_view_MonsterTypeIcon.__name__ = "client.view.MonsterTypeIcon";
client_view_MonsterTypeIcon.__interfaces__ = [sweet_functor_IFunction];
client_view_MonsterTypeIcon.getInstance = function() {
	if(client_view_MonsterTypeIcon._oInstance == null) {
		client_view_MonsterTypeIcon._oInstance = new client_view_MonsterTypeIcon();
	}
	return client_view_MonsterTypeIcon._oInstance;
};
client_view_MonsterTypeIcon.prototype = {
	apply: function(o) {
		return "/image/" + o.getLabel() + ".svg";
	}
	,__class__: client_view_MonsterTypeIcon
};
var client_view_RoomActive = function(oGame) {
	this._oGame = oGame;
};
client_view_RoomActive.__name__ = "client.view.RoomActive";
client_view_RoomActive.__interfaces__ = [sweet_functor_IFunction];
client_view_RoomActive.prototype = {
	apply: function(o) {
		return this._oGame.isActive(this._oGame.getPlayerAr()[0],o);
	}
	,__class__: client_view_RoomActive
};
var game_Game = function() {
	this._DF_INT_4 = new game_entity_DiceFace("Int",4);
	this._DF_INT_3 = new game_entity_DiceFace("Int",3);
	this._DF_INT_2 = new game_entity_DiceFace("Int",2);
	this._DF_INT_1 = new game_entity_DiceFace("Int",1);
	this._DF_AGI_4 = new game_entity_DiceFace("Agi",4);
	this._DF_AGI_3 = new game_entity_DiceFace("Agi",3);
	this._DF_AGI_2 = new game_entity_DiceFace("Agi",2);
	this._DF_AGI_1 = new game_entity_DiceFace("Agi",1);
	this._DF_STR_4 = new game_entity_DiceFace("Str",4);
	this._DF_STR_3 = new game_entity_DiceFace("Str",3);
	this._DF_STR_2 = new game_entity_DiceFace("Str",2);
	this._DF_STR_1 = new game_entity_DiceFace("Str",1);
	this._oCombatResolver = new game_process_CombatResolver();
	this._oIdGenerator = new tool_UniqueIdGenerator();
	this._mFighter = new haxe_ds_IntMap();
	this._oWorldmap = new game_entity_Worldmap();
	this._oWorldmap.addRoom(new game_entity_Room(new space_Vector2i(0,0),1,1));
	this._oWorldmap.addRoom(new game_entity_Room(new space_Vector2i(0,1),1,1));
	this._oWorldmap.addRoom(new game_entity_Room(new space_Vector2i(1,0),1,1));
	this._oWorldmap.addRoom(new game_entity_Room(new space_Vector2i(1,1),1,1));
	this._oWorldmap.createDoorByPos(new space_Vector2i(0,0),new space_Vector2i(0,1));
	this._oWorldmap.createDoorByPos(new space_Vector2i(0,1),new space_Vector2i(1,1));
	this._oWorldmap.createDoorByPos(new space_Vector2i(1,1),new space_Vector2i(1,0));
	var oBase_label = "";
	var oBase_max_health = 1;
	this._aMonsterType = new haxe_ds_StringMap();
	var _g = new haxe_ds_StringMap();
	var value = game_entity_MonsterType.create({ label : "Inquisitor", max_health : 10, dice : [this._DF_AGI_1,this._DF_AGI_2,this._DF_INT_2,this._DF_INT_3]});
	_g.h["inquisitor"] = value;
	var value = game_entity_MonsterType.create({ label : "Hunter", max_health : 10, dice : [this._DF_STR_1,this._DF_STR_2,this._DF_AGI_2,this._DF_AGI_3]});
	_g.h["hunter"] = value;
	var value = game_entity_MonsterType.create({ label : "Paladin", max_health : 10, dice : [this._DF_INT_1,this._DF_INT_2,this._DF_STR_2,this._DF_STR_3]});
	_g.h["paladin"] = value;
	var aHero = _g;
	var _g = new haxe_ds_StringMap();
	var value = game_entity_MonsterType.create({ label : "rat", cost : 1, space : 1, max_health : 4, dice : [this._DF_AGI_1,this._DF_STR_2,this._DF_STR_2]});
	_g.h["rat"] = value;
	var value = game_entity_MonsterType.create({ label : "bat", cost : 1, space : 1, max_health : 4, dice : [this._DF_INT_1,this._DF_AGI_2,this._DF_AGI_2]});
	_g.h["bat"] = value;
	var value = game_entity_MonsterType.create({ label : "cat", cost : 1, space : 1, max_health : 4, dice : [this._DF_STR_1,this._DF_INT_2,this._DF_INT_2]});
	_g.h["cat"] = value;
	var aMonster = _g;
	var _g = haxe_ds_StringMap.kvIterator(aHero.h);
	while(_g.hasNext()) {
		var _g1 = _g.next();
		var s = _g1.key;
		var o = _g1.value;
		this._aMonsterType.h[s] = o;
	}
	var _g = haxe_ds_StringMap.kvIterator(aMonster.h);
	while(_g.hasNext()) {
		var _g1 = _g.next();
		var s = _g1.key;
		var o = _g1.value;
		this._aMonsterType.h[s] = o;
	}
	this._aPlayer = [new game_entity_Player(Lambda.array(aMonster),Lambda.array(aHero))];
	this._aPlayer[0].setRoom(this._oWorldmap.getRoomByPos(new space_Vector2i(0,0)));
	var oType = haxe_ds_StringMap.valueIterator(aHero.h);
	while(oType.hasNext()) {
		var oType1 = oType.next();
		this._addGroup(this._aPlayer[0],oType1);
	}
	var oRoom = this._oWorldmap.getRoomByPos(new space_Vector2i(1,1));
	this._Room_addGroup(oRoom,aMonster.h["rat"]);
	this._Room_addGroup(oRoom,aMonster.h["rat"]);
	this._Room_addGroup(oRoom,aMonster.h["bat"]);
};
game_Game.__name__ = "game.Game";
game_Game.prototype = {
	getPlayerAr: function() {
		return this._aPlayer;
	}
	,getWorldmap: function() {
		return this._oWorldmap;
	}
	,getOpponent: function(oPlayer) {
		if(this._aPlayer[0] == oPlayer) {
			return this._aPlayer[1];
		} else {
			return this._aPlayer[0];
		}
	}
	,getMonsterTypeByLabel: function(s) {
		var o = haxe_ds_StringMap.valueIterator(this._aMonsterType.h);
		while(o.hasNext()) {
			var o1 = o.next();
			if(o1.getLabel() == s) {
				return o1;
			}
		}
		return null;
	}
	,getFighter: function(iId) {
		return this._mFighter.h[iId];
	}
	,isActive: function(oPlayer,oRoom) {
		var oRoomCurrent = oPlayer.getRoom();
		if(oRoomCurrent == oRoom) {
			return false;
		}
		var aNextRoom = this.getWorldmap().getConnectedRoom(oRoomCurrent);
		return aNextRoom.indexOf(oRoom) != -1;
	}
	,move: function(oPlayer,oRoom) {
		oPlayer.setRoom(oRoom);
		var aFighter = oRoom.getFighterAr();
		if(aFighter.length == 0) {
			return;
		}
		oPlayer.setFight(new game_entity_Combat(oPlayer.getAttackGroup(),aFighter));
	}
	,_addGroup: function(oPlayer,oType) {
		var oFighter = new game_entity_Fighter(this._oIdGenerator.generate(),oType);
		oPlayer.getAttackGroup().push(oFighter);
		var _this = this._mFighter;
		var key = oFighter.getId();
		_this.h[key] = oFighter;
	}
	,_Room_addGroup: function(oRoom,oType) {
		var oFighter = new game_entity_Fighter(this._oIdGenerator.generate(),oType);
		oRoom.addFighter(oFighter);
		var _this = this._mFighter;
		var key = oFighter.getId();
		_this.h[key] = oFighter;
	}
	,endTurnSetup: function() {
		this._iTurn++;
	}
	,combatTurnEnd: function(oPlayer) {
		if(!oPlayer.getFight().resolve()) {
			return;
		}
		oPlayer.setFight(null);
		if(this._isCombatOver()) {
			this.combatEnd(oPlayer);
		}
	}
	,_isCombatOver: function() {
		var _g = 0;
		var _g1 = this._aPlayer;
		while(_g < _g1.length) {
			var oPlayer = _g1[_g];
			++_g;
			if(oPlayer.getFight() != null) {
				return false;
			}
		}
		return true;
	}
	,combatEnd: function(oPlayer) {
		oPlayer.getRoom().setFighterAr([]);
	}
	,onTurnBegin: function(fn) {
		fn();
	}
	,__class__: game_Game
};
var game_entity_Combat = function(aDefender,aAttacker) {
	this._reset(aDefender,aAttacker);
};
game_entity_Combat.__name__ = "game.entity.Combat";
game_entity_Combat.prototype = {
	_reset: function(aDefender,aAttacker) {
		this._iMaxAttCount = Math.ceil(aAttacker.length / aDefender.length);
		this._aEngagement = [];
		if(aAttacker.length == 0) {
			return;
		}
		if(aDefender.length == 0) {
			return;
		}
		var _g = 0;
		var _g1 = aDefender.length;
		while(_g < _g1) {
			var i = _g++;
			this._aEngagement.push({ defender_action : this._createFighterAction(aDefender[i]), attacker_engagement_ar : aAttacker.length <= i ? [] : [this._createAttEngagement(aAttacker[i])]});
		}
		if(aDefender.length < aAttacker.length) {
			var oLastEgagement = this._aEngagement[this._aEngagement.length - 1];
			var _g = aDefender.length;
			var _g1 = aAttacker.length;
			while(_g < _g1) {
				var i = _g++;
				oLastEgagement.attacker_engagement_ar.push(this._createAttEngagement(aAttacker[i]));
			}
		}
		this._update();
	}
	,_createFighterAction: function(oFighter) {
		return { fighter : oFighter, dice_face : this.draw(oFighter.getType().getDice())};
	}
	,_createAttEngagement: function(oFighter) {
		return { attacker_action : this._createFighterAction(oFighter), damage : 0};
	}
	,drawForGroup: function(a) {
		var aDraw = [];
		var _g = 0;
		while(_g < a.length) {
			var o = a[_g];
			++_g;
			aDraw.push({ dice_face : this.draw(o.getType().getDice()), fighter : o});
		}
		return aDraw;
	}
	,draw: function(a) {
		var i = Math.floor(Math.random() * a.length);
		return a[i];
	}
	,getEngageAr: function() {
		return this._aEngagement;
	}
	,getMaxOverflow: function() {
		return this._iMaxAttCount;
	}
	,setEngagement: function(iEngageIndex,iEngageAttIndex,iTargetEngageIndex) {
		var oCurrentAttEngagement = this._aEngagement[iEngageIndex].attacker_engagement_ar[iEngageAttIndex];
		HxOverrides.remove(this._aEngagement[iEngageIndex].attacker_engagement_ar,oCurrentAttEngagement);
		this._aEngagement[iTargetEngageIndex].attacker_engagement_ar.push(oCurrentAttEngagement);
		this._update();
	}
	,swapEngagement: function(iEngageAIndex,iEngageAttAIndex,iEngageBIndex,iEngageAttBIndex) {
		this.setEngagement(iEngageBIndex,iEngageAttBIndex,iEngageAIndex);
		this.setEngagement(iEngageAIndex,iEngageAttAIndex,iEngageBIndex);
	}
	,_update: function() {
		var _g = 0;
		var _g1 = this._aEngagement;
		while(_g < _g1.length) {
			var oEngagement = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = oEngagement.attacker_engagement_ar;
			while(_g2 < _g3.length) {
				var oAttackerEngagement = _g3[_g2];
				++_g2;
				oAttackerEngagement.damage = this.getDamage(oAttackerEngagement.attacker_action.dice_face,oEngagement.defender_action.dice_face);
			}
		}
	}
	,resolve: function() {
		var aDef = [];
		var aAtt = [];
		var _g = 0;
		var _g1 = this._aEngagement;
		while(_g < _g1.length) {
			var oEngagement = _g1[_g];
			++_g;
			var oDef = oEngagement.defender_action.fighter;
			var _g2 = 0;
			var _g3 = oEngagement.attacker_engagement_ar;
			while(_g2 < _g3.length) {
				var oAttackerEngagement = _g3[_g2];
				++_g2;
				var iDamage = oAttackerEngagement.damage;
				var oAtt = oAttackerEngagement.attacker_action.fighter;
				if(iDamage > 0) {
					oDef.damage(iDamage);
				} else if(iDamage < 0) {
					oAtt.damage(-iDamage);
				}
				if(oAtt.getHealth() > 0) {
					aAtt.push(oAtt);
				}
			}
			if(oDef.getHealth() > 0) {
				aDef.push(oDef);
			}
		}
		this._reset(aDef,aAtt);
		return this._aEngagement.length == 0;
	}
	,getRandomItem: function(a) {
		var i = Math.floor(Math.random() * a.length);
		return a[i];
	}
	,getDamage: function(a,b) {
		var iAMultiplier = 1;
		var iBMultiplier = 1;
		var _g_a = a.getType();
		var _g_b = b.getType();
		var _g = _g_b;
		switch(_g_a) {
		case "Agi":
			switch(_g) {
			case "Int":
				iBMultiplier = 2;
				break;
			case "Str":
				iAMultiplier = 2;
				break;
			default:
			}
			break;
		case "Int":
			switch(_g) {
			case "Agi":
				iAMultiplier = 2;
				break;
			case "Str":
				iBMultiplier = 2;
				break;
			default:
			}
			break;
		case "Str":
			switch(_g) {
			case "Agi":
				iBMultiplier = 2;
				break;
			case "Int":
				iAMultiplier = 2;
				break;
			default:
			}
			break;
		default:
		}
		var iValueA = a.getValue() * iAMultiplier;
		var iValueB = b.getValue() * iBMultiplier;
		if(iValueA == iValueB) {
			return 0;
		}
		if(iValueA > iValueB) {
			return iValueA;
		} else {
			return -iValueB;
		}
	}
	,__class__: game_entity_Combat
};
var game_entity_DiceFace = function(oType,iValue) {
	this._oType = oType;
	this._iValue = iValue;
};
game_entity_DiceFace.__name__ = "game.entity.DiceFace";
game_entity_DiceFace.prototype = {
	getType: function() {
		return this._oType;
	}
	,getValue: function() {
		return this._iValue;
	}
	,__class__: game_entity_DiceFace
};
var game_entity_Door = function(oRoomA,oRoomB) {
	this._oRoomA = oRoomA;
	this._oRoomB = oRoomB;
	this._oPosition = new space_Vector2i(tool_IntTool.min(this._oRoomA.getPosition().getX(),this._oRoomB.getPosition().getX()),tool_IntTool.min(this._oRoomA.getPosition().getY(),this._oRoomB.getPosition().getY()));
};
game_entity_Door.__name__ = "game.entity.Door";
game_entity_Door.prototype = {
	getRoomA: function() {
		return this._oRoomA;
	}
	,getRoomB: function() {
		return this._oRoomB;
	}
	,getPosition: function() {
		return this._oPosition;
	}
	,getVertical: function() {
		return this._oRoomA.getPosition().getY() != this._oRoomB.getPosition().getY();
	}
	,__class__: game_entity_Door
};
var game_entity_Fighter = function(iId,oType) {
	this._iId = iId;
	this._iHealth = oType.getHealthMax();
	this._oType = oType;
};
game_entity_Fighter.__name__ = "game.entity.Fighter";
game_entity_Fighter.prototype = {
	getId: function() {
		return this._iId;
	}
	,getType: function() {
		return this._oType;
	}
	,getHealth: function() {
		return this._iHealth;
	}
	,damage: function(i) {
		this._iHealth -= i;
	}
	,getHealthPercent: function() {
		return this._iHealth / this._oType.getHealthMax() * 100;
	}
	,__class__: game_entity_Fighter
};
var game_entity_MonsterType = function(sLabel,iCostGold,iCostSpace,iHealthMax,oDice) {
	this._sLabel = sLabel;
	this._iCostGold = iCostGold;
	this._iCostSpace = iCostSpace;
	this._iHealthMax = iHealthMax;
	this._aDiceFace = oDice;
};
game_entity_MonsterType.__name__ = "game.entity.MonsterType";
game_entity_MonsterType.create = function(oParam) {
	if(oParam.cost == null) {
		oParam.cost = 0;
	}
	if(oParam.space == null) {
		oParam.space = 0;
	}
	return new game_entity_MonsterType(oParam.label,oParam.cost,oParam.space,oParam.max_health,oParam.dice);
};
game_entity_MonsterType.prototype = {
	getLabel: function() {
		return this._sLabel;
	}
	,getGold: function() {
		return this._iCostGold;
	}
	,getSpace: function() {
		return this._iCostSpace;
	}
	,getHealthMax: function() {
		return this._iHealthMax;
	}
	,getDice: function() {
		return this._aDiceFace;
	}
	,__class__: game_entity_MonsterType
};
var game_entity_Player = function(aMonsterOption,aAttackerShopOption) {
	this._aAttackGroup = [];
	this._iGold = 10;
	this._oCombat = null;
	this._aAttackerShopOption = aAttackerShopOption;
	this._oRoom = null;
};
game_entity_Player.__name__ = "game.entity.Player";
game_entity_Player.prototype = {
	getLabel: function() {
		return "Player";
	}
	,getGold: function() {
		return this._iGold;
	}
	,getRoom: function() {
		return this._oRoom;
	}
	,getAttackGroup: function() {
		return this._aAttackGroup;
	}
	,getAttackerShopOption: function() {
		return this._aAttackerShopOption;
	}
	,getFight: function() {
		return this._oCombat;
	}
	,setFight: function(oCombat) {
		this._oCombat = oCombat;
	}
	,setRoom: function(o) {
		this._oRoom = o;
	}
	,__class__: game_entity_Player
};
var game_entity_Room = function(oPosition,iSizeX,iSizeY) {
	this._iId = null;
	this._iSizeX = iSizeX;
	this._iSizeY = iSizeY;
	this._oPosition = oPosition;
	this._aFighter = [];
	this._bVisited = false;
};
game_entity_Room.__name__ = "game.entity.Room";
game_entity_Room.prototype = {
	setId: function(i) {
		if(this._iId != null) {
			throw haxe_Exception.thrown("!!!");
		}
		this._iId = i;
	}
	,getId: function() {
		return this._iId;
	}
	,setFighterAr: function(aFighter) {
		this._aFighter = aFighter;
	}
	,getFighterAr: function() {
		return this._aFighter;
	}
	,getPosition: function() {
		return this._oPosition;
	}
	,getSizeX: function() {
		return this._iSizeX;
	}
	,getSizeY: function() {
		return this._iSizeY;
	}
	,getVisited: function() {
		return this._bVisited;
	}
	,setVisited: function(b) {
		if(b == null) {
			b = true;
		}
		this._bVisited = b;
	}
	,addFighter: function(o) {
		return this._aFighter.push(o);
	}
	,getSpaceAvailable: function() {
		var i = 9;
		var _g = 0;
		var _g1 = this._aFighter;
		while(_g < _g1.length) {
			var oFighter = _g1[_g];
			++_g;
			i -= oFighter.getType().getSpace();
		}
		return i;
	}
	,__class__: game_entity_Room
};
var game_entity_Worldmap = function() {
	this._aDoor = [];
	this._mRoom = new haxe_ds_IntMap();
	this._oIdGenerator = new tool_UniqueIdGenerator();
	this._mDoorByRoom = new haxe_ds_IntMap();
};
game_entity_Worldmap.__name__ = "game.entity.Worldmap";
game_entity_Worldmap.prototype = {
	getRoom: function(iKey) {
		return this._mRoom.h[iKey];
	}
	,getConnectedRoom: function(oRoom) {
		var _this = this._mDoorByRoom;
		var key = oRoom.getId();
		var aDoor = _this.h[key];
		var aRoom = [];
		var _g = 0;
		while(_g < aDoor.length) {
			var oDoor = aDoor[_g];
			++_g;
			if(oDoor.getRoomA() != oRoom) {
				aRoom.push(oDoor.getRoomA());
			}
			if(oDoor.getRoomB() != oRoom) {
				aRoom.push(oDoor.getRoomB());
			}
		}
		return aRoom;
	}
	,getRoomByPos: function(oPos) {
		var _this = this._mRoom;
		var key = this.getKey(oPos);
		return _this.h[key];
	}
	,getRoomAr: function() {
		return Lambda.array(this._mRoom);
	}
	,getDoorAr: function() {
		return this._aDoor;
	}
	,getDoorArByRoom: function(oRoom) {
		var _this = this._mDoorByRoom;
		var key = this.getKey(oRoom.getPosition());
		return _this.h[key];
	}
	,getKey: function(oPos) {
		var i = new haxe_io_Bytes(new ArrayBuffer(4));
		i.setUInt16(0,oPos.x);
		i.setUInt16(2,oPos.y);
		return i.getInt32(0);
	}
	,addRoom: function(oRoom) {
		var i = this.getKey(oRoom.getPosition());
		oRoom.setId(i);
		this._mRoom.h[i] = oRoom;
	}
	,addDoor: function(oRoomA,oRoomB) {
		var oDoor = new game_entity_Door(oRoomA,oRoomB);
		this._aDoor.push(oDoor);
		var _this = this._mDoorByRoom;
		var key = oRoomA.getId();
		if(!_this.h.hasOwnProperty(key)) {
			var _this = this._mDoorByRoom;
			var key = oRoomA.getId();
			_this.h[key] = [];
		}
		var _this = this._mDoorByRoom;
		var key = oRoomA.getId();
		var a = _this.h[key];
		a.push(oDoor);
		var _this = this._mDoorByRoom;
		var key = oRoomB.getId();
		if(!_this.h.hasOwnProperty(key)) {
			var _this = this._mDoorByRoom;
			var key = oRoomB.getId();
			_this.h[key] = [];
		}
		var _this = this._mDoorByRoom;
		var key = oRoomB.getId();
		var a = _this.h[key];
		a.push(oDoor);
	}
	,createDoorByPos: function(oVectorA,oVectorB) {
		this.addDoor(this.getRoomByPos(oVectorA),this.getRoomByPos(oVectorB));
	}
	,__class__: game_entity_Worldmap
};
var game_process_CombatResolver = function() {
	var _g = new haxe_ds_StringMap();
	var _g1 = new haxe_ds_StringMap();
	_g1.set("Physic",0.5);
	_g.set("Armor",_g1);
	this._mDamageModifer = _g;
};
game_process_CombatResolver.__name__ = "game.process.CombatResolver";
game_process_CombatResolver.prototype = {
	__class__: game_process_CombatResolver
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	unwrap: function() {
		return this.__nativeException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native"}
});
var haxe_Resource = function() { };
haxe_Resource.__name__ = "haxe.Resource";
haxe_Resource.listNames = function() {
	var _g = [];
	var _g1 = 0;
	var _g2 = haxe_Resource.content;
	while(_g1 < _g2.length) {
		var x = _g2[_g1];
		++_g1;
		_g.push(x.name);
	}
	return _g;
};
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
var haxe__$Template_TemplateExpr = $hxEnums["haxe._Template.TemplateExpr"] = { __ename__ : true, __constructs__ : ["OpVar","OpExpr","OpIf","OpStr","OpBlock","OpForeach","OpMacro"]
	,OpVar: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe._Template.TemplateExpr",toString:$estr}; },$_.__params__ = ["v"],$_)
	,OpExpr: ($_=function(expr) { return {_hx_index:1,expr:expr,__enum__:"haxe._Template.TemplateExpr",toString:$estr}; },$_.__params__ = ["expr"],$_)
	,OpIf: ($_=function(expr,eif,eelse) { return {_hx_index:2,expr:expr,eif:eif,eelse:eelse,__enum__:"haxe._Template.TemplateExpr",toString:$estr}; },$_.__params__ = ["expr","eif","eelse"],$_)
	,OpStr: ($_=function(str) { return {_hx_index:3,str:str,__enum__:"haxe._Template.TemplateExpr",toString:$estr}; },$_.__params__ = ["str"],$_)
	,OpBlock: ($_=function(l) { return {_hx_index:4,l:l,__enum__:"haxe._Template.TemplateExpr",toString:$estr}; },$_.__params__ = ["l"],$_)
	,OpForeach: ($_=function(expr,loop) { return {_hx_index:5,expr:expr,loop:loop,__enum__:"haxe._Template.TemplateExpr",toString:$estr}; },$_.__params__ = ["expr","loop"],$_)
	,OpMacro: ($_=function(name,params) { return {_hx_index:6,name:name,params:params,__enum__:"haxe._Template.TemplateExpr",toString:$estr}; },$_.__params__ = ["name","params"],$_)
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var haxe_Template = function(str) {
	var tokens = this.parseTokens(str);
	this.expr = this.parseBlock(tokens);
	if(!tokens.isEmpty()) {
		throw haxe_Exception.thrown("Unexpected '" + Std.string(tokens.first().s) + "'");
	}
};
haxe_Template.__name__ = "haxe.Template";
haxe_Template.prototype = {
	execute: function(context,macros) {
		this.macros = macros == null ? { } : macros;
		this.context = context;
		this.stack = new haxe_ds_List();
		this.buf = new StringBuf();
		this.run(this.expr);
		return this.buf.b;
	}
	,resolve: function(v) {
		if(v == "__current__") {
			return this.context;
		}
		var value = Reflect.getProperty(this.context,v);
		if(value != null || Object.prototype.hasOwnProperty.call(this.context,v)) {
			return value;
		}
		var _g_head = this.stack.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var ctx = val;
			value = Reflect.getProperty(ctx,v);
			if(value != null || Object.prototype.hasOwnProperty.call(ctx,v)) {
				return value;
			}
		}
		return Reflect.field(haxe_Template.globals,v);
	}
	,parseTokens: function(data) {
		var tokens = new haxe_ds_List();
		while(haxe_Template.splitter.match(data)) {
			var p = haxe_Template.splitter.matchedPos();
			if(p.pos > 0) {
				tokens.add({ p : HxOverrides.substr(data,0,p.pos), s : true, l : null});
			}
			if(HxOverrides.cca(data,p.pos) == 58) {
				tokens.add({ p : HxOverrides.substr(data,p.pos + 2,p.len - 4), s : false, l : null});
				data = haxe_Template.splitter.matchedRight();
				continue;
			}
			var parp = p.pos + p.len;
			var npar = 1;
			var params = [];
			var part = "";
			while(true) {
				var c = HxOverrides.cca(data,parp);
				++parp;
				if(c == 40) {
					++npar;
				} else if(c == 41) {
					--npar;
					if(npar <= 0) {
						break;
					}
				} else if(c == null) {
					throw haxe_Exception.thrown("Unclosed macro parenthesis");
				}
				if(c == 44 && npar == 1) {
					params.push(part);
					part = "";
				} else {
					part += String.fromCodePoint(c);
				}
			}
			params.push(part);
			tokens.add({ p : haxe_Template.splitter.matched(2), s : false, l : params});
			data = HxOverrides.substr(data,parp,data.length - parp);
		}
		if(data.length > 0) {
			tokens.add({ p : data, s : true, l : null});
		}
		return tokens;
	}
	,parseBlock: function(tokens) {
		var l = new haxe_ds_List();
		while(true) {
			var t = tokens.first();
			if(t == null) {
				break;
			}
			if(!t.s && (t.p == "end" || t.p == "else" || HxOverrides.substr(t.p,0,7) == "elseif ")) {
				break;
			}
			l.add(this.parse(tokens));
		}
		if(l.length == 1) {
			return l.first();
		}
		return haxe__$Template_TemplateExpr.OpBlock(l);
	}
	,parse: function(tokens) {
		var t = tokens.pop();
		var p = t.p;
		if(t.s) {
			return haxe__$Template_TemplateExpr.OpStr(p);
		}
		if(t.l != null) {
			var pe = new haxe_ds_List();
			var _g = 0;
			var _g1 = t.l;
			while(_g < _g1.length) {
				var p1 = _g1[_g];
				++_g;
				pe.add(this.parseBlock(this.parseTokens(p1)));
			}
			return haxe__$Template_TemplateExpr.OpMacro(p,pe);
		}
		var kwdEnd = function(kwd) {
			var pos = -1;
			var length = kwd.length;
			if(HxOverrides.substr(p,0,length) == kwd) {
				pos = length;
				var _g_offset = 0;
				var _g_s = HxOverrides.substr(p,length,null);
				while(_g_offset < _g_s.length) {
					var c = _g_s.charCodeAt(_g_offset++);
					if(c == 32) {
						++pos;
					} else {
						break;
					}
				}
			}
			return pos;
		};
		var pos = kwdEnd("if");
		if(pos > 0) {
			p = HxOverrides.substr(p,pos,p.length - pos);
			var e = this.parseExpr(p);
			var eif = this.parseBlock(tokens);
			var t = tokens.first();
			var eelse;
			if(t == null) {
				throw haxe_Exception.thrown("Unclosed 'if'");
			}
			if(t.p == "end") {
				tokens.pop();
				eelse = null;
			} else if(t.p == "else") {
				tokens.pop();
				eelse = this.parseBlock(tokens);
				t = tokens.pop();
				if(t == null || t.p != "end") {
					throw haxe_Exception.thrown("Unclosed 'else'");
				}
			} else {
				t.p = HxOverrides.substr(t.p,4,t.p.length - 4);
				eelse = this.parse(tokens);
			}
			return haxe__$Template_TemplateExpr.OpIf(e,eif,eelse);
		}
		var pos = kwdEnd("foreach");
		if(pos >= 0) {
			p = HxOverrides.substr(p,pos,p.length - pos);
			var e = this.parseExpr(p);
			var efor = this.parseBlock(tokens);
			var t = tokens.pop();
			if(t == null || t.p != "end") {
				throw haxe_Exception.thrown("Unclosed 'foreach'");
			}
			return haxe__$Template_TemplateExpr.OpForeach(e,efor);
		}
		if(haxe_Template.expr_splitter.match(p)) {
			return haxe__$Template_TemplateExpr.OpExpr(this.parseExpr(p));
		}
		return haxe__$Template_TemplateExpr.OpVar(p);
	}
	,parseExpr: function(data) {
		var l = new haxe_ds_List();
		var expr = data;
		while(haxe_Template.expr_splitter.match(data)) {
			var p = haxe_Template.expr_splitter.matchedPos();
			var k = p.pos + p.len;
			if(p.pos != 0) {
				l.add({ p : HxOverrides.substr(data,0,p.pos), s : true});
			}
			var p1 = haxe_Template.expr_splitter.matched(0);
			l.add({ p : p1, s : p1.indexOf("\"") >= 0});
			data = haxe_Template.expr_splitter.matchedRight();
		}
		if(data.length != 0) {
			var _g_offset = 0;
			var _g_s = data;
			while(_g_offset < _g_s.length) {
				var _g1_key = _g_offset;
				var _g1_value = _g_s.charCodeAt(_g_offset++);
				var i = _g1_key;
				var c = _g1_value;
				if(c != 32) {
					l.add({ p : HxOverrides.substr(data,i,null), s : true});
					break;
				}
			}
		}
		var e;
		try {
			e = this.makeExpr(l);
			if(!l.isEmpty()) {
				throw haxe_Exception.thrown(l.first().p);
			}
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(typeof(_g1) == "string") {
				var s = _g1;
				throw haxe_Exception.thrown("Unexpected '" + s + "' in " + expr);
			} else {
				throw _g;
			}
		}
		return function() {
			try {
				return e();
			} catch( _g ) {
				var exc = haxe_Exception.caught(_g).unwrap();
				throw haxe_Exception.thrown("Error : " + Std.string(exc) + " in " + expr);
			}
		};
	}
	,makeConst: function(v) {
		haxe_Template.expr_trim.match(v);
		v = haxe_Template.expr_trim.matched(1);
		if(HxOverrides.cca(v,0) == 34) {
			var str = HxOverrides.substr(v,1,v.length - 2);
			return function() {
				return str;
			};
		}
		if(haxe_Template.expr_int.match(v)) {
			var i = Std.parseInt(v);
			return function() {
				return i;
			};
		}
		if(haxe_Template.expr_float.match(v)) {
			var f = parseFloat(v);
			return function() {
				return f;
			};
		}
		var me = this;
		return function() {
			return me.resolve(v);
		};
	}
	,makePath: function(e,l) {
		var p = l.first();
		if(p == null || p.p != ".") {
			return e;
		}
		l.pop();
		var field = l.pop();
		if(field == null || !field.s) {
			throw haxe_Exception.thrown(field.p);
		}
		var f = field.p;
		haxe_Template.expr_trim.match(f);
		f = haxe_Template.expr_trim.matched(1);
		return this.makePath(function() {
			return Reflect.field(e(),f);
		},l);
	}
	,makeExpr: function(l) {
		return this.makePath(this.makeExpr2(l),l);
	}
	,skipSpaces: function(l) {
		var p = l.first();
		while(p != null) {
			var _g_offset = 0;
			var _g_s = p.p;
			while(_g_offset < _g_s.length) {
				var c = _g_s.charCodeAt(_g_offset++);
				if(c != 32) {
					return;
				}
			}
			l.pop();
			p = l.first();
		}
	}
	,makeExpr2: function(l) {
		this.skipSpaces(l);
		var p = l.pop();
		this.skipSpaces(l);
		if(p == null) {
			throw haxe_Exception.thrown("<eof>");
		}
		if(p.s) {
			return this.makeConst(p.p);
		}
		switch(p.p) {
		case "!":
			var e = this.makeExpr(l);
			return function() {
				var v = e();
				if(v != null) {
					return v == false;
				} else {
					return true;
				}
			};
		case "(":
			this.skipSpaces(l);
			var e1 = this.makeExpr(l);
			this.skipSpaces(l);
			var p1 = l.pop();
			if(p1 == null || p1.s) {
				throw haxe_Exception.thrown(p1);
			}
			if(p1.p == ")") {
				return e1;
			}
			this.skipSpaces(l);
			var e2 = this.makeExpr(l);
			this.skipSpaces(l);
			var p2 = l.pop();
			this.skipSpaces(l);
			if(p2 == null || p2.p != ")") {
				throw haxe_Exception.thrown(p2);
			}
			switch(p1.p) {
			case "!=":
				return function() {
					return e1() != e2();
				};
			case "&&":
				return function() {
					return e1() && e2();
				};
			case "*":
				return function() {
					return e1() * e2();
				};
			case "+":
				return function() {
					return e1() + e2();
				};
			case "-":
				return function() {
					return e1() - e2();
				};
			case "/":
				return function() {
					return e1() / e2();
				};
			case "<":
				return function() {
					return e1() < e2();
				};
			case "<=":
				return function() {
					return e1() <= e2();
				};
			case "==":
				return function() {
					return e1() == e2();
				};
			case ">":
				return function() {
					return e1() > e2();
				};
			case ">=":
				return function() {
					return e1() >= e2();
				};
			case "||":
				return function() {
					return e1() || e2();
				};
			default:
				throw haxe_Exception.thrown("Unknown operation " + p1.p);
			}
			break;
		case "-":
			var e3 = this.makeExpr(l);
			return function() {
				return -e3();
			};
		}
		throw haxe_Exception.thrown(p.p);
	}
	,run: function(e) {
		switch(e._hx_index) {
		case 0:
			var v = e.v;
			var _this = this.buf;
			var x = Std.string(this.resolve(v));
			_this.b += Std.string(x);
			break;
		case 1:
			var e1 = e.expr;
			var _this = this.buf;
			var x = Std.string(e1());
			_this.b += Std.string(x);
			break;
		case 2:
			var eelse = e.eelse;
			var eif = e.eif;
			var e1 = e.expr;
			var v = e1();
			if(v == null || v == false) {
				if(eelse != null) {
					this.run(eelse);
				}
			} else {
				this.run(eif);
			}
			break;
		case 3:
			var str = e.str;
			this.buf.b += str == null ? "null" : "" + str;
			break;
		case 4:
			var l = e.l;
			var _g_head = l.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var e1 = val;
				this.run(e1);
			}
			break;
		case 5:
			var loop = e.loop;
			var e1 = e.expr;
			var v = e1();
			try {
				var x = $getIterator(v);
				if(x.hasNext == null) {
					throw haxe_Exception.thrown(null);
				}
				v = x;
			} catch( _g ) {
				try {
					if(v.hasNext == null) {
						throw haxe_Exception.thrown(null);
					}
				} catch( _g1 ) {
					throw haxe_Exception.thrown("Cannot iter on " + Std.string(v));
				}
			}
			this.stack.push(this.context);
			var v1 = v;
			var ctx = v1;
			while(ctx.hasNext()) {
				var ctx1 = ctx.next();
				this.context = ctx1;
				this.run(loop);
			}
			this.context = this.stack.pop();
			break;
		case 6:
			var params = e.params;
			var m = e.name;
			var v = Reflect.field(this.macros,m);
			var pl = [];
			var old = this.buf;
			pl.push($bind(this,this.resolve));
			var _g_head = params.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var p = val;
				if(p._hx_index == 0) {
					var v1 = p.v;
					pl.push(this.resolve(v1));
				} else {
					this.buf = new StringBuf();
					this.run(p);
					pl.push(this.buf.b);
				}
			}
			this.buf = old;
			try {
				var _this = this.buf;
				var x = Std.string(v.apply(this.macros,pl));
				_this.b += Std.string(x);
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				var plstr;
				try {
					plstr = pl.join(",");
				} catch( _g1 ) {
					plstr = "???";
				}
				var msg = "Macro call " + m + "(" + plstr + ") failed (" + Std.string(e) + ")";
				throw haxe_Exception.thrown(msg);
			}
			break;
		}
	}
	,__class__: haxe_Template
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	setUInt16: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setUint16(pos,v,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : true, __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_crypto_Base64 = function() { };
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g = 0;
		var _g1 = this.base.length;
		while(_g < _g1) {
			var i = _g++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(key | 0);
		return new haxe_iterators_ArrayIterator(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new haxe_ds__$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,first: function() {
		if(this.h == null) {
			return null;
		} else {
			return this.h.item;
		}
	}
	,pop: function() {
		if(this.h == null) {
			return null;
		}
		var x = this.h.item;
		this.h = this.h.next;
		if(this.h == null) {
			this.q = null;
		}
		this.length--;
		return x;
	}
	,isEmpty: function() {
		return this.h == null;
	}
	,toString: function() {
		var s_b = "";
		var first = true;
		var l = this.h;
		s_b += "{";
		while(l != null) {
			if(first) {
				first = false;
			} else {
				s_b += ", ";
			}
			s_b += Std.string(Std.string(l.item));
			l = l.next;
		}
		s_b += "}";
		return s_b;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	__class__: haxe_ds__$List_ListNode
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.keysIterator = function(h) {
	var keys = Object.keys(h);
	var len = keys.length;
	var idx = 0;
	return { hasNext : function() {
		return idx < len;
	}, next : function() {
		idx += 1;
		return keys[idx - 1];
	}};
};
haxe_ds_StringMap.valueIterator = function(h) {
	var keys = Object.keys(h);
	var len = keys.length;
	var idx = 0;
	return { hasNext : function() {
		return idx < len;
	}, next : function() {
		idx += 1;
		return h[keys[idx - 1]];
	}};
};
haxe_ds_StringMap.kvIterator = function(h) {
	var keys = Object.keys(h);
	var len = keys.length;
	var idx = 0;
	return { hasNext : function() {
		return idx < len;
	}, next : function() {
		idx += 1;
		var k = keys[idx - 1];
		return { key : k, value : h[k]};
	}};
};
haxe_ds_StringMap.prototype = {
	get: function(key) {
		return this.h[key];
	}
	,set: function(key,value) {
		this.h[key] = value;
	}
	,keys: function() {
		return haxe_ds_StringMap.keysIterator(this.h);
	}
	,iterator: function() {
		return haxe_ds_StringMap.valueIterator(this.h);
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_iterators_ArrayKeyValueIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayKeyValueIterator.__name__ = "haxe.iterators.ArrayKeyValueIterator";
haxe_iterators_ArrayKeyValueIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return { value : this.array[this.current], key : this.current++};
	}
	,__class__: haxe_iterators_ArrayKeyValueIterator
};
var haxe_iterators_MapKeyValueIterator = function(map) {
	this.map = map;
	this.keys = map.keys();
};
haxe_iterators_MapKeyValueIterator.__name__ = "haxe.iterators.MapKeyValueIterator";
haxe_iterators_MapKeyValueIterator.prototype = {
	hasNext: function() {
		return this.keys.hasNext();
	}
	,next: function() {
		var key = this.keys.next();
		return { value : this.map.get(key), key : key};
	}
	,__class__: haxe_iterators_MapKeyValueIterator
};
var js_Boot = function() { };
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var misc_PairTool = function() { };
misc_PairTool.__name__ = "misc.PairTool";
misc_PairTool.create = function(aGroupA,aGroupB) {
	var a = [];
	var i = 0;
	var j = 0;
	var oA = $getIterator(aGroupA);
	while(oA.hasNext()) {
		var oA1 = oA.next();
		var oB = $getIterator(aGroupB);
		while(oB.hasNext()) {
			var oB1 = oB.next();
			if(i > j) {
				continue;
			}
			a.push({ a : oA1, b : oB1});
			++j;
		}
		++i;
	}
	return a;
};
var space_Vector2i = function(x_,y_) {
	if(y_ == null) {
		y_ = 0;
	}
	if(x_ == null) {
		x_ = 0;
	}
	this.set(x_,y_);
};
space_Vector2i.__name__ = "space.Vector2i";
space_Vector2i.compare = function(a,oVector) {
	console.log("src/space/Vector2i.hx:118:","ok");
	if(a.equal(oVector)) {
		return 0;
	}
	if(a.toString() > oVector.toString()) {
		return 1;
	} else {
		return -1;
	}
};
space_Vector2i.distance = function(v1,v2) {
	var dx = v1.x - v2.x;
	var dy = v1.y - v2.y;
	return Math.sqrt(dx * dx + dy * dy);
};
space_Vector2i.distanceSqed = function(v1,v2) {
	var dx = v1.x - v2.x;
	var dy = v1.y - v2.y;
	return dx * dx + dy * dy;
};
space_Vector2i.distanceOcto = function(v1,v2) {
	var dx = Math.abs(v1.x - v2.x);
	var dy = Math.abs(v1.y - v2.y);
	return (dx + dy + Math.max(dx,dy)) * 0.5;
};
space_Vector2i.prototype = {
	clone: function() {
		return new space_Vector2i(this.x,this.y);
	}
	,copy: function(oVector) {
		return this.set(oVector.x,oVector.y);
	}
	,getX: function() {
		return this.x;
	}
	,getY: function() {
		return this.y;
	}
	,length_get: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,dotProduct: function(v) {
		return this.x * v.x + this.y * v.y;
	}
	,distance_get: function(oVector) {
		return space_Vector2i.distance(this,oVector);
	}
	,distanceSqed_get: function(oVector) {
		return space_Vector2i.distanceSqed(this,oVector);
	}
	,getTaxicabLength: function() {
		return Math.abs(this.x) + Math.abs(this.y);
	}
	,toString: function() {
		return this.x + ":" + this.y;
	}
	,set: function(x_,y_) {
		if(y_ == null) {
			y_ = 0;
		}
		this.x = x_;
		this.y = y_;
		return this;
	}
	,add: function(x_,y_) {
		if(y_ == null) {
			y_ = 0;
		}
		this.x += x_;
		this.y += y_;
		return this;
	}
	,vector_add: function(oVector) {
		return this.add(oVector.x,oVector.y);
	}
	,mult: function(fMultiplicator) {
		this.x = Math.round(this.x * fMultiplicator);
		this.y = Math.round(this.y * fMultiplicator);
		return this;
	}
	,divide: function(fDivisor) {
		if(fDivisor == 0) {
			throw haxe_Exception.thrown("[ERROR] Vector3 : can not divide by 0.");
		}
		return this.mult(Math.round(1 / fDivisor));
	}
	,normalize: function() {
		this.divide(this.length_get());
		return this;
	}
	,length_set: function(fLength) {
		if(fLength < 0) {
			throw haxe_Exception.thrown("Invalid length : " + fLength);
		}
		var length = this.length_get();
		if(length == 0) {
			this.x = Math.round(fLength);
		} else {
			this.mult(fLength / length);
		}
		return this;
	}
	,project: function(oVector) {
		var fDotprod = oVector.dotProduct(this);
		this.copy(oVector).length_set(Math.abs(fDotprod) / oVector.length_get());
		return this;
	}
	,equal: function(oVector) {
		if(oVector.x == this.x) {
			return oVector.y == this.y;
		} else {
			return false;
		}
	}
	,angleAxisXY: function() {
		if(this.x == 0 && this.y == 0) {
			return null;
		}
		return Math.atan2(this.y,this.x);
	}
	,__class__: space_Vector2i
};
var sweet_functor_builder_IBuilder = function() { };
sweet_functor_builder_IBuilder.__name__ = "sweet.functor.builder.IBuilder";
sweet_functor_builder_IBuilder.__isInterface__ = true;
sweet_functor_builder_IBuilder.prototype = {
	__class__: sweet_functor_builder_IBuilder
};
var tool_IntTool = function() { };
tool_IntTool.__name__ = "tool.IntTool";
tool_IntTool.min = function(a,b) {
	if(a <= b) {
		return a;
	}
	return b;
};
var tool_NormalizerRemap = function(mMappingField) {
	this._mMappingField = mMappingField;
};
tool_NormalizerRemap.__name__ = "tool.NormalizerRemap";
tool_NormalizerRemap.__interfaces__ = [sweet_functor_IFunction];
tool_NormalizerRemap.prototype = {
	apply: function(o) {
		if(o == null) {
			return null;
		}
		if(this.isIterable(o)) {
			var oIterator = $getIterator(o);
			var a = [];
			var oChild = oIterator;
			while(oChild.hasNext()) {
				var oChild1 = oChild.next();
				a.push(this.apply(oChild1));
			}
			return a;
		}
		if(((o) instanceof haxe_ds_StringMap) || ((o) instanceof haxe_ds_IntMap)) {
			throw haxe_Exception.thrown("TODO");
		}
		if(typeof(o) == "number" && ((o | 0) === o) || typeof(o) == "string" || typeof(o) == "number" || typeof(o) == "boolean") {
			return o;
		}
		var oClass = js_Boot.getClass(o);
		if(oClass == null) {
			var oRes = { };
			var _g = 0;
			var _g1 = Reflect.fields(o);
			while(_g < _g1.length) {
				var sField = _g1[_g];
				++_g;
				oRes[sField] = this.apply(Reflect.field(o,sField));
			}
			return oRes;
		}
		var oView = { };
		var sClassName = oClass.__name__;
		if(!Object.prototype.hasOwnProperty.call(this._mMappingField.h,sClassName)) {
			throw haxe_Exception.thrown("Mapping for class \"" + sClassName + "\" is required");
		}
		var aFieldName = this._mMappingField.h[sClassName];
		var _g = haxe_ds_StringMap.kvIterator(aFieldName.h);
		while(_g.hasNext()) {
			var _g1 = _g.next();
			var s = _g1.key;
			var fn = _g1.value;
			var oValue = null;
			if(fn == null) {
				var oMethod = this.getAccessor(o,s);
				oValue = oMethod.apply(o,[]);
			} else {
				oValue = fn.apply(o);
			}
			if(!this.isIterable(oValue)) {
				oView[s] = this.apply(oValue);
				continue;
			}
			var oIterator = $getIterator(oValue);
			var a = [];
			var oChild = oIterator;
			while(oChild.hasNext()) {
				var oChild1 = oChild.next();
				a.push(this.apply(oChild1));
			}
			oView[s] = a;
		}
		return oView;
	}
	,getAccessor: function(o,sField) {
		var sMethod = "get" + unveil_tool_StringTool.ucfirst(sField);
		var oMethod = Reflect.field(o,sMethod);
		if(oMethod == null) {
			var c = js_Boot.getClass(o);
			throw haxe_Exception.thrown("method \"" + sMethod + "\" is missing for class \"" + c.__name__ + "\" ");
		}
		return oMethod;
	}
	,isIterable: function(o) {
		try {
			$getIterator(o);
		} catch( _g ) {
			return false;
		}
		return true;
	}
	,__class__: tool_NormalizerRemap
};
var tool_UniqueIdGenerator = function(_iIdOffset) {
	if(_iIdOffset == null) {
		_iIdOffset = 0;
	}
	this._iId = _iIdOffset;
};
tool_UniqueIdGenerator.__name__ = "tool.UniqueIdGenerator";
tool_UniqueIdGenerator.prototype = {
	setOffset: function(_iIdOffset) {
		this._iId = _iIdOffset;
	}
	,generate: function() {
		return this._iId++;
	}
	,__class__: tool_UniqueIdGenerator
};
var unveil_Model = function() {
	this._mEntityHandler = new haxe_ds_StringMap();
};
unveil_Model.__name__ = "unveil.Model";
unveil_Model.prototype = {
	setEntityLoader: function(s,o,bCachePolicy) {
		if(bCachePolicy == null) {
			bCachePolicy = true;
		}
		this._mEntityHandler.h[s] = { loader : o, cache : null, cache_policy : bCachePolicy};
	}
	,setEntity: function(s,o) {
		this._mEntityHandler.h[s] = { loader : null, cache : o, cache_policy : true};
	}
	,getEntity: function(s) {
		if(!Object.prototype.hasOwnProperty.call(this._mEntityHandler.h,s)) {
			return null;
		}
		return this._mEntityHandler.h[s].cache;
	}
	,loadEntity: function(s) {
		if(!Object.prototype.hasOwnProperty.call(this._mEntityHandler.h,s)) {
			return Promise.reject(s);
		}
		var oEntityHandler = this._mEntityHandler.h[s];
		if(((oEntityHandler.cache) instanceof Promise)) {
			return oEntityHandler.cache;
		}
		if(oEntityHandler.loader != null && (oEntityHandler.cache == null || oEntityHandler.cache_policy == false)) {
			var oLoader = oEntityHandler.loader;
			var oPromise = oLoader.load();
			oEntityHandler.cache = oPromise;
			oPromise.then(function(oValue) {
				oEntityHandler.cache = oValue;
			}).catch(function(onRejected) {
				oEntityHandler.cache = null;
			});
			return oPromise;
		}
		return Promise.resolve(oEntityHandler.cache);
	}
	,__class__: unveil_Model
};
var unveil_Unveil = function(mModel,mPageHandle,aTemplate) {
	this._oModel = new unveil_Model();
	var _g = haxe_ds_StringMap.kvIterator(mModel.h);
	while(_g.hasNext()) {
		var _g1 = _g.next();
		var s = _g1.key;
		var o = _g1.value;
		if(js_Boot.__implements(o,unveil_loader_ILoader)) {
			this._oModel.setEntityLoader(s,o,false);
		} else {
			this._oModel.setEntity(s,o);
		}
	}
	this._oView = new unveil_View(this._oModel);
	var oCompiler = new unveil_template_Compiler(this._oView);
	var _g = 0;
	while(_g < aTemplate.length) {
		var oItem = aTemplate[_g];
		++_g;
		this._oView.addTemplate(oItem.key,oCompiler.compile(oItem.template));
	}
	this._oPageController = new unveil_controller_PageController(this._oModel,this._oView);
	var _g = 0;
	while(_g < mPageHandle.length) {
		var o = mPageHandle[_g];
		++_g;
		this._oPageController.addPageHandler(o);
	}
	this._oPageController.goto($global.location.pathname);
};
unveil_Unveil.__name__ = "unveil.Unveil";
unveil_Unveil.prototype = {
	getPageController: function() {
		return this._oPageController;
	}
	,__class__: unveil_Unveil
};
var unveil_View = function(oModel) {
	this._mTemplate = new haxe_ds_StringMap();
	this._mTemplateLoader = new haxe_ds_StringMap();
	this._oContext = { template : this._mTemplate, model : oModel, page : { }};
};
unveil_View.__name__ = "unveil.View";
unveil_View.prototype = {
	getTemplate: function(sKey) {
		return this._mTemplate.h[sKey];
	}
	,setPageData: function(oData) {
		this._oContext.page = oData;
	}
	,addTemplate: function(sKey,oTemplate) {
		if(Object.prototype.hasOwnProperty.call(this._mTemplate.h,sKey)) {
			throw haxe_Exception.thrown("template " + sKey + " already exist");
		}
		this._mTemplate.h[sKey] = oTemplate;
	}
	,addPageTemplateLoader: function(sKey,oTemplate) {
		if(Object.prototype.hasOwnProperty.call(this._mTemplate.h,sKey) || Object.prototype.hasOwnProperty.call(this._mTemplateLoader.h,sKey)) {
			throw haxe_Exception.thrown("template " + sKey + " already exist");
		}
		this._mTemplateLoader.h[sKey] = oTemplate;
	}
	,diplay: function(sPageKey) {
		if(Object.prototype.hasOwnProperty.call(this._mTemplateLoader.h,sPageKey)) {
			this._mTemplateLoader.h[sPageKey].load();
		}
		if(!Object.prototype.hasOwnProperty.call(this._mTemplate.h,sPageKey)) {
			throw haxe_Exception.thrown("template " + sPageKey + " does not exist");
		}
		var oTemplate = this._mTemplate.h[sPageKey];
		var tmp = oTemplate.render(this._oContext).b;
		window.document.body.innerHTML = tmp;
	}
	,__class__: unveil_View
};
var unveil_controller_IController = function() { };
unveil_controller_IController.__name__ = "unveil.controller.IController";
unveil_controller_IController.__isInterface__ = true;
var unveil_controller_PageController = function(oModel,oView) {
	this._sRouteParamKey = "_route";
	var _gthis = this;
	this._mPathToPage = new haxe_ds_StringMap();
	this._oModel = oModel;
	this._oView = oView;
	window.document.addEventListener("click",$bind(this,this.handleClickEvent));
	window.onpopstate = function(event) {
		_gthis.goto(window.document.location.pathname);
	};
};
unveil_controller_PageController.__name__ = "unveil.controller.PageController";
unveil_controller_PageController.__interfaces__ = [unveil_controller_IController];
unveil_controller_PageController.prototype = {
	getModel: function() {
		return this._oModel;
	}
	,addPageHandler: function(o) {
		this._mPathToPage.h[o.id] = o;
	}
	,handleClickEvent: function(event) {
		var oTarget = event.target;
		if(!((oTarget) instanceof Element)) {
			return;
		}
		if(oTarget.hasAttribute("href")) {
			event.preventDefault();
			this.goto(oTarget.getAttribute("href"));
		}
	}
	,goto: function(sPath) {
		var sPageKey = null;
		var oPageHandleCurrent = null;
		var _g = haxe_ds_StringMap.kvIterator(this._mPathToPage.h);
		while(_g.hasNext()) {
			var _g1 = _g.next();
			var sKey = _g1.key;
			var oPageHandle = _g1.value;
			var o = oPageHandle.path_pattern.exec(sPath);
			if(o == null) {
				continue;
			}
			this._oModel.setEntity(this._sRouteParamKey,{ id : oPageHandle.id, param : o.length > 1 ? o.slice(1) : null});
			oPageHandle.path_pattern.lastIndex = 0;
			oPageHandleCurrent = oPageHandle;
		}
		if(oPageHandleCurrent == null) {
			oPageHandleCurrent = this._mPathToPage.h["not_found"];
		}
		this._goto(oPageHandleCurrent,$global.location.protocol + "//" + $global.location.hostname + ":" + $global.location.port + sPath);
	}
	,_goto: function(oPageHandle,sFullPath) {
		var _gthis = this;
		if(oPageHandle.model_load == null) {
			oPageHandle.model_load = [];
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = oPageHandle.model_load;
		while(_g1 < _g2.length) {
			var s = _g2[_g1];
			++_g1;
			_g.push(this._oModel.loadEntity(s));
		}
		var aPromise = _g;
		var oPromiseLoader = Promise.all(aPromise).then(function(oValue) {
			if(oPageHandle.page_data == null) {
				oPageHandle.page_data = { };
			}
			if(oPageHandle.page_data == null) {
				oPageHandle.page_data = { };
			}
			var _g = 0;
			var _g1 = oPageHandle.model_load;
			while(_g < _g1.length) {
				var s = _g1[_g];
				++_g;
				oPageHandle.page_data[s] = _gthis._oModel.getEntity(s);
			}
			window.history.pushState({ id : 0},"hellototo",sFullPath);
			_gthis._oView.setPageData(oPageHandle.page_data);
			try {
				_gthis._oView.diplay(oPageHandle.id);
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				return Promise.reject(e);
			}
			return oValue;
		});
		var oPromiseTimeout = new Promise(function(resolve,reject) {
			haxe_Timer.delay(function() {
				reject("Model loading timeout");
			},10000);
		});
		Promise.race([oPromiseTimeout,oPromiseLoader]).catch(function(onRejected) {
			console.log("unveil/controller/PageController.hx:175:",onRejected);
		});
	}
	,__class__: unveil_controller_PageController
};
var unveil_loader_ILoader = function() { };
unveil_loader_ILoader.__name__ = "unveil.loader.ILoader";
unveil_loader_ILoader.__isInterface__ = true;
unveil_loader_ILoader.prototype = {
	__class__: unveil_loader_ILoader
};
var unveil_loader_ALoader = function() {
};
unveil_loader_ALoader.__name__ = "unveil.loader.ALoader";
unveil_loader_ALoader.__interfaces__ = [unveil_loader_ILoader];
unveil_loader_ALoader.prototype = {
	load: function() {
		return new Promise($bind(this,this.callback));
	}
	,callback: function(resolve,reject) {
		throw haxe_Exception.thrown("callback: override me");
	}
	,__class__: unveil_loader_ALoader
};
var unveil_template_IOperator = function() { };
unveil_template_IOperator.__name__ = "unveil.template.IOperator";
unveil_template_IOperator.__isInterface__ = true;
unveil_template_IOperator.prototype = {
	__class__: unveil_template_IOperator
};
var unveil_template_Operator = function(s,fn) {
	this._s = s;
	this._fn = fn;
};
unveil_template_Operator.__name__ = "unveil.template.Operator";
unveil_template_Operator.__interfaces__ = [unveil_template_IOperator];
unveil_template_Operator.prototype = {
	getTokken: function() {
		return this._s;
	}
	,getCallback: function() {
		return this._fn;
	}
	,createItem: function(aChildren) {
		return new unveil_template_OperatorItem(this,aChildren);
	}
	,__class__: unveil_template_Operator
};
var unveil_template_UnaryOperator = function(s,fn) {
	this._s = s;
};
unveil_template_UnaryOperator.__name__ = "unveil.template.UnaryOperator";
unveil_template_UnaryOperator.__interfaces__ = [unveil_template_IOperator];
unveil_template_UnaryOperator.prototype = {
	getTokken: function() {
		return this._s;
	}
	,getCallback: function() {
		return this._fn;
	}
	,createItem: function(aChildren) {
		return new unveil_template_UnaryOperatorItem(this,aChildren);
	}
	,__class__: unveil_template_UnaryOperator
};
var unveil_template_Compiler = function(oView) {
	this._oView = oView;
};
unveil_template_Compiler.__name__ = "unveil.template.Compiler";
unveil_template_Compiler.ignoreParenthesis = function(s) {
	s = StringTools.replace(s,"("," ");
	s = StringTools.replace(s,")"," ");
	return s;
};
unveil_template_Compiler.prototype = {
	compile: function(s) {
		var lStack = new haxe_ds_List();
		lStack.push({ template : new unveil_template_CompositeTemplate(), end_tokken : null});
		var oCurrentTemplate = this;
		var a = s.split("::");
		var _g = 0;
		var _g1 = a.length;
		while(_g < _g1) {
			var i = _g++;
			if(i % 2 == 0) {
				lStack.first().template.addPart(new unveil_template_TemplateString(a[i]));
				continue;
			}
			var s1 = StringTools.trim(a[i]);
			if(s1 == "") {
				continue;
			}
			if(s1 != null && s1 == lStack.first().end_tokken) {
				lStack.pop();
				continue;
			}
			if(s1 == "else") {
				try {
					(js_Boot.__cast(lStack.first().template , unveil_template_IfTemplate)).setElseBlock();
					continue;
				} catch( _g2 ) {
					var c = js_Boot.getClass(lStack.first().template);
					throw haxe_Exception.thrown("else tokken must follow if (following " + c.__name__ + ")");
				}
			}
			if(StringTools.startsWith(s1,"render")) {
				lStack.first().template.addPart(this.compileSubRender(s1));
				continue;
			}
			var oBlockHeader = this.compileInstruction(s1);
			if(oBlockHeader == null) {
				lStack.first().template.addPart(this.compilePrintVar(s1));
				continue;
			}
			lStack.first().template.addPart(oBlockHeader.template);
			if(oBlockHeader.end_tokken != null) {
				lStack.push(oBlockHeader);
				continue;
			}
		}
		if(lStack.length != 1) {
			throw haxe_Exception.thrown("parsing failed, missing closing token " + lStack.first().end_tokken + "  near " + s);
		}
		return lStack.first().template;
	}
	,compileInstruction: function(s) {
		if(StringTools.startsWith(s,"if ") || StringTools.startsWith(s,"if(")) {
			var s1 = s.substring(2);
			return { end_tokken : unveil_template_Compiler._ENDIF, template : new unveil_template_IfTemplate(this.compileExpression(s1))};
		}
		if(StringTools.startsWith(s,"for ") || StringTools.startsWith(s,"for(")) {
			var s1 = StringTools.trim(s.substring(3));
			if(StringTools.startsWith(s1,"(") && StringTools.endsWith(s1,")")) {
				s1 = StringTools.trim(s1.substring(1,s1.length - 1));
			}
			var a = s1.split(" in ");
			if(a.length != 2) {
				throw haxe_Exception.thrown("Expected for {string} in {string}, in not found");
			}
			var aKeyValueExp = a[0].split(" => ");
			if(aKeyValueExp.length == 2) {
				return { end_tokken : unveil_template_Compiler._ENDFOR, template : new unveil_template_ForKeyValueTemplate(this.compileExpression(StringTools.trim(a[1])),StringTools.trim(aKeyValueExp[0]),StringTools.trim(aKeyValueExp[1]))};
			}
			return { end_tokken : unveil_template_Compiler._ENDFOR, template : new unveil_template_ForTemplate(this.compileExpression(StringTools.trim(a[1])),StringTools.trim(a[0]))};
		}
		return null;
	}
	,compileSubRender: function(s) {
		var s1 = s.substring(7);
		s1 = unveil_template_Compiler.ignoreParenthesis(s1);
		var a = s1.split(" with ");
		var oWidth = null;
		if(a.length == 2) {
			oWidth = this.compileAnoStructure(a[1]);
		}
		return new unveil_template_SubRendererTemplate(this._oView,StringTools.trim(a[0]),oWidth);
	}
	,compilePrintVar: function(s) {
		return new unveil_template_PrintVarTemplate(this.compileExpression(s));
	}
	,compileExpression: function(s) {
		var _gthis = this;
		s = StringTools.trim(s);
		if(s == "null") {
			return new unveil_template_Const(null);
		}
		if(unveil_template_Compiler._REGEXP_INTEGER.match(s)) {
			return new unveil_template_Const(Std.parseInt(s));
		}
		if(unveil_template_Compiler._REGEXP_FLOAT.match(s)) {
			return new unveil_template_Const(parseFloat(s));
		}
		var _g = 0;
		var _g1 = unveil_template_Compiler._aOperator;
		while(_g < _g1.length) {
			var oOperator = _g1[_g];
			++_g;
			var a = s.split(oOperator.getTokken());
			if(a.length > 2) {
				throw haxe_Exception.thrown("not implemented yet");
			}
			if(a.length == 1) {
				continue;
			}
			var result = new Array(a.length);
			var _g2 = 0;
			var _g3 = a.length;
			while(_g2 < _g3) {
				var i = _g2++;
				result[i] = _gthis.compileExpression(a[i]);
			}
			var aChild = result;
			return oOperator.createItem(aChild);
		}
		return new unveil_tool_VPathAccessor(s);
	}
	,compileAnoStructure: function(s) {
		s = StringTools.trim(s);
		s = unveil_tool_StringTool.ltrim(s,"{");
		s = unveil_tool_StringTool.rtrim(s,"}");
		var aField = s.split(",");
		var aToto = [];
		var _g = 0;
		while(_g < aField.length) {
			var sField = aField[_g];
			++_g;
			sField = StringTools.trim(sField);
			if(sField.length == 0) {
				continue;
			}
			var aKeyValue = sField.split(":");
			if(aKeyValue.length != 2) {
				throw haxe_Exception.thrown("expect \"key: value\", got \"" + sField + "\"");
			}
			var sKey = StringTools.trim(aKeyValue[0]);
			aToto.push({ name : sKey, fn : this.compileExpression(StringTools.trim(aKeyValue[1]))});
		}
		return new unveil_template_AnnoStructure(aToto);
	}
	,__class__: unveil_template_Compiler
};
var unveil_template_Const = function(o) {
	this._o = o;
};
unveil_template_Const.__name__ = "unveil.template.Const";
unveil_template_Const.__interfaces__ = [sweet_functor_IFunction];
unveil_template_Const.prototype = {
	apply: function(o) {
		return this._o;
	}
	,__class__: unveil_template_Const
};
var unveil_template_AnnoStructure = function(aField) {
	this._aField = aField;
};
unveil_template_AnnoStructure.__name__ = "unveil.template.AnnoStructure";
unveil_template_AnnoStructure.__interfaces__ = [sweet_functor_IFunction];
unveil_template_AnnoStructure.prototype = {
	apply: function(oContext) {
		var o = { };
		var _g = 0;
		var _g1 = this._aField;
		while(_g < _g1.length) {
			var oField = _g1[_g];
			++_g;
			o[oField.name] = oField.fn.apply(oContext);
		}
		return o;
	}
	,__class__: unveil_template_AnnoStructure
};
var unveil_template_ITemplate = function() { };
unveil_template_ITemplate.__name__ = "unveil.template.ITemplate";
unveil_template_ITemplate.__isInterface__ = true;
unveil_template_ITemplate.prototype = {
	__class__: unveil_template_ITemplate
};
var unveil_template_TemplateString = function(s) {
	this._s = s;
};
unveil_template_TemplateString.__name__ = "unveil.template.TemplateString";
unveil_template_TemplateString.__interfaces__ = [unveil_template_ITemplate];
unveil_template_TemplateString.prototype = {
	render: function(oContext,oBuffer) {
		if(oBuffer == null) {
			oBuffer = new StringBuf();
		}
		oBuffer.b += Std.string(this._s);
		return oBuffer;
	}
	,__class__: unveil_template_TemplateString
};
var unveil_template_UnaryOperatorItem = function(oOperator,aChildren) {
	this._oOperator = oOperator;
	this._aChildren = aChildren;
};
unveil_template_UnaryOperatorItem.__name__ = "unveil.template.UnaryOperatorItem";
unveil_template_UnaryOperatorItem.__interfaces__ = [sweet_functor_IFunction];
unveil_template_UnaryOperatorItem.prototype = {
	apply: function(o) {
		var fn = this._oOperator.getCallback();
		return fn(this._aChildren[0].apply(o));
	}
	,__class__: unveil_template_UnaryOperatorItem
};
var unveil_template_OperatorItem = function(oOperator,aChildren) {
	this._oOperator = oOperator;
	this._aChildren = aChildren;
};
unveil_template_OperatorItem.__name__ = "unveil.template.OperatorItem";
unveil_template_OperatorItem.__interfaces__ = [sweet_functor_IFunction];
unveil_template_OperatorItem.prototype = {
	apply: function(o) {
		var fn = this._oOperator.getCallback();
		return fn(this._aChildren[0].apply(o),this._aChildren[1].apply(o));
	}
	,__class__: unveil_template_OperatorItem
};
var unveil_template_CompositeTemplate = function() {
	this._aTemplate = [];
};
unveil_template_CompositeTemplate.__name__ = "unveil.template.CompositeTemplate";
unveil_template_CompositeTemplate.__interfaces__ = [unveil_template_ITemplate];
unveil_template_CompositeTemplate.prototype = {
	render: function(oContext,oBuffer) {
		if(oBuffer == null) {
			oBuffer = new StringBuf();
		}
		var _g = 0;
		var _g1 = this._aTemplate;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.render(oContext,oBuffer);
		}
		return oBuffer;
	}
	,addPart: function(oPart) {
		this._aTemplate.push(oPart);
	}
	,__class__: unveil_template_CompositeTemplate
};
var unveil_template_ForKeyValueTemplate = function(oExpression,sKeyName,sVarName) {
	unveil_template_CompositeTemplate.call(this);
	this._oExpression = oExpression;
	this._sVarName = sVarName;
	this._sKeyName = sKeyName;
};
unveil_template_ForKeyValueTemplate.__name__ = "unveil.template.ForKeyValueTemplate";
unveil_template_ForKeyValueTemplate.__super__ = unveil_template_CompositeTemplate;
unveil_template_ForKeyValueTemplate.prototype = $extend(unveil_template_CompositeTemplate.prototype,{
	render: function(oContext,oBuffer) {
		var _g = $getKeyValueIterator(this._oExpression.apply(oContext));
		while(_g.hasNext()) {
			var _g1 = _g.next();
			var k = _g1.key;
			var v = _g1.value;
			var oCurrentContext = Reflect.copy(oContext);
			oCurrentContext[this._sKeyName] = k;
			oCurrentContext[this._sVarName] = v;
			oBuffer = unveil_template_CompositeTemplate.prototype.render.call(this,oCurrentContext,oBuffer);
		}
		return oBuffer;
	}
	,__class__: unveil_template_ForKeyValueTemplate
});
var unveil_template_ForTemplate = function(oExpression,sVarName) {
	unveil_template_CompositeTemplate.call(this);
	this._oExpression = oExpression;
	this._sVarName = sVarName;
};
unveil_template_ForTemplate.__name__ = "unveil.template.ForTemplate";
unveil_template_ForTemplate.__super__ = unveil_template_CompositeTemplate;
unveil_template_ForTemplate.prototype = $extend(unveil_template_CompositeTemplate.prototype,{
	render: function(oContext,oBuffer) {
		var a = this._oExpression.apply(oContext);
		var oIterator = null;
		try {
			oIterator = $getIterator(a);
		} catch( _g ) {
			throw haxe_Exception.thrown(Std.string(a) + " is not iterable");
		}
		var o = oIterator;
		while(o.hasNext()) {
			var o1 = o.next();
			var oCurrentContext = Reflect.copy(oContext);
			oCurrentContext[this._sVarName] = o1;
			oBuffer = unveil_template_CompositeTemplate.prototype.render.call(this,oCurrentContext,oBuffer);
		}
		return oBuffer;
	}
	,__class__: unveil_template_ForTemplate
});
var unveil_template_IfTemplate = function(oExpression) {
	unveil_template_CompositeTemplate.call(this);
	this._oExpression = oExpression;
	this._oElseblock = null;
};
unveil_template_IfTemplate.__name__ = "unveil.template.IfTemplate";
unveil_template_IfTemplate.__super__ = unveil_template_CompositeTemplate;
unveil_template_IfTemplate.prototype = $extend(unveil_template_CompositeTemplate.prototype,{
	addPart: function(oPart) {
		if(this._oElseblock == null) {
			unveil_template_CompositeTemplate.prototype.addPart.call(this,oPart);
			return;
		}
		this._oElseblock.addPart(oPart);
	}
	,setElseBlock: function() {
		this._oElseblock = new unveil_template_CompositeTemplate();
	}
	,render: function(oContext,oBuffer) {
		if(this._oExpression.apply(oContext)) {
			return unveil_template_CompositeTemplate.prototype.render.call(this,oContext,oBuffer);
		}
		if(this._oElseblock != null) {
			return this._oElseblock.render(oContext,oBuffer);
		}
		return oBuffer;
	}
	,__class__: unveil_template_IfTemplate
});
var unveil_template_PrintVarTemplate = function(oFn) {
	this._oFn = oFn;
};
unveil_template_PrintVarTemplate.__name__ = "unveil.template.PrintVarTemplate";
unveil_template_PrintVarTemplate.__interfaces__ = [unveil_template_ITemplate];
unveil_template_PrintVarTemplate.prototype = {
	render: function(oContext,oBuffer) {
		if(oBuffer == null) {
			oBuffer = new StringBuf();
		}
		var x = this._oFn.apply(oContext);
		oBuffer.b += Std.string(x);
		return oBuffer;
	}
	,__class__: unveil_template_PrintVarTemplate
};
var unveil_template_SubRendererTemplate = function(oView,sTemplateKey,oWith) {
	this._oView = oView;
	this._sTemplateKey = sTemplateKey;
	this._oWith = oWith;
};
unveil_template_SubRendererTemplate.__name__ = "unveil.template.SubRendererTemplate";
unveil_template_SubRendererTemplate.__interfaces__ = [unveil_template_ITemplate];
unveil_template_SubRendererTemplate.prototype = {
	render: function(oContext,oBuffer) {
		if(this._oWith != null) {
			oContext = this._oWith.apply(oContext);
		}
		var oTemplate = this._oView.getTemplate(this._sTemplateKey);
		if(oTemplate == null) {
			throw haxe_Exception.thrown("Missing template \"" + this._sTemplateKey + "\" for render instruction");
		}
		return oTemplate.render(oContext,oBuffer);
	}
	,__class__: unveil_template_SubRendererTemplate
};
var unveil_tool_StringTool = function() { };
unveil_tool_StringTool.__name__ = "unveil.tool.StringTool";
unveil_tool_StringTool.titleCase = function(s) {
	throw haxe_Exception.thrown("TODO");
};
unveil_tool_StringTool.ucfirst = function(s) {
	return s.charAt(0).toUpperCase() + HxOverrides.substr(s,1,null);
};
unveil_tool_StringTool.ltrim = function(sSubject,sMask) {
	var i = 0;
	while(sSubject.charAt(i) == sMask.charAt(0)) ++i;
	return HxOverrides.substr(sSubject,i,null);
};
unveil_tool_StringTool.rtrim = function(sSubject,sMask) {
	var i = sSubject.length - 1;
	while(sSubject.charAt(i) == sMask.charAt(0)) --i;
	return sSubject.substring(0,i + 1);
};
unveil_tool_StringTool.trim = function(sSubject,sMask) {
	return unveil_tool_StringTool.rtrim(unveil_tool_StringTool.ltrim(sSubject,sMask),sMask);
};
var unveil_tool_VPathAccessor = function(sPath) {
	this._aPath = unveil_tool_VPathAccessor.parsePath(sPath);
};
unveil_tool_VPathAccessor.__name__ = "unveil.tool.VPathAccessor";
unveil_tool_VPathAccessor.__interfaces__ = [sweet_functor_IFunction];
unveil_tool_VPathAccessor.parsePath = function(sPath) {
	var a = sPath.split(".");
	var result = new Array(a.length);
	var _g = 0;
	var _g1 = a.length;
	while(_g < _g1) {
		var i = _g++;
		var s = a[i];
		result[i] = HxOverrides.substr(s,-2,null) == "()" ? s.substring(0,s.length - 2) : s;
	}
	a = result;
	return a;
};
unveil_tool_VPathAccessor.prototype = {
	apply: function(o) {
		var oRes = o;
		var _g = 0;
		var _g1 = this._aPath;
		while(_g < _g1.length) {
			var sPathPart = _g1[_g];
			++_g;
			try {
				oRes = this.getAccess(oRes,sPathPart);
			} catch( _g2 ) {
				var e = haxe_Exception.caught(_g2).unwrap();
				throw haxe_Exception.thrown("cannot access \"" + Std.string(this._aPath) + "\" because : " + Std.string(e));
			}
		}
		return oRes;
	}
	,getAccess: function(o,sPathPart) {
		if(o == null) {
			throw haxe_Exception.thrown(sPathPart + " parent is null");
		}
		var oRes = Reflect.field(o,sPathPart);
		if(Reflect.isFunction(oRes)) {
			oRes = oRes.apply(o,[]);
		}
		return oRes;
	}
	,__class__: unveil_tool_VPathAccessor
};
var view_View = function() {
	this._mTemplate = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = haxe_Resource.listNames();
	while(_g < _g1.length) {
		var sRes = _g1[_g];
		++_g;
		var _this = this._mTemplate;
		var value = new haxe_Template(haxe_Resource.getString(sRes));
		_this.h[sRes] = value;
	}
};
view_View.__name__ = "view.View";
view_View.prototype = {
	render: function(resolve,s,oData) {
		return this._mTemplate.h[s].execute(oData,this);
	}
	,getTemplate: function(s) {
		return this._mTemplate.h[s];
	}
	,getData: function() {
		return { current_player : { dungeon : { roomAr : { monsterAr : []}}}};
	}
	,getMonsterView: function(oFighter) {
		return { icon : this.getIcon(oFighter.getType().getLabel())};
	}
	,getIcon: function(s) {
		return { path : "image/Characters/Rodent0.png", x : 0, y : 0};
	}
	,__class__: view_View
};
var view_loader_GameStateLoader = function(oGame) {
	this._oGame = oGame;
	var _g = new haxe_ds_StringMap();
	var _g1 = new haxe_ds_StringMap();
	_g1.h["engageAr"] = null;
	_g1.h["maxOverflow"] = null;
	_g.h["game.entity.Combat"] = _g1;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["fight"] = null;
	_g1.h["gold"] = null;
	_g1.h["attackGroup"] = null;
	_g1.h["attackerShopOption"] = null;
	_g1.h["room"] = null;
	_g.h["game.entity.Player"] = _g1;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["id"] = null;
	_g1.h["type"] = null;
	_g1.h["health"] = null;
	_g1.h["healthPercent"] = null;
	_g.h["game.entity.Fighter"] = _g1;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["roomAr"] = null;
	_g1.h["doorAr"] = null;
	_g.h["game.entity.Worldmap"] = _g1;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["label"] = null;
	_g1.h["healthMax"] = null;
	_g1.h["dice"] = null;
	_g1.h["gold"] = null;
	_g1.h["space"] = null;
	var value = client_view_MonsterTypeIcon.getInstance();
	_g1.h["icon"] = value;
	_g.h["game.entity.MonsterType"] = _g1;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["type"] = null;
	_g1.h["value"] = null;
	_g.h["game.entity.DiceFace"] = _g1;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["position"] = null;
	_g1.h["vertical"] = null;
	_g.h["game.entity.Door"] = _g1;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["id"] = null;
	_g1.h["position"] = null;
	_g1.h["fighterAr"] = null;
	_g1.h["visited"] = null;
	var value = new client_view_RoomActive(oGame);
	_g1.h["active"] = value;
	_g.h["game.entity.Room"] = _g1;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["x"] = null;
	_g1.h["y"] = null;
	_g.h["space.Vector2i"] = _g1;
	var _g1 = new haxe_ds_StringMap();
	_g1.h["playerAr"] = null;
	_g1.h["worldmap"] = null;
	_g.h["game.Game"] = _g1;
	this._oNormalizer = new tool_NormalizerRemap(_g);
	unveil_loader_ALoader.call(this);
};
view_loader_GameStateLoader.__name__ = "view.loader.GameStateLoader";
view_loader_GameStateLoader.__super__ = unveil_loader_ALoader;
view_loader_GameStateLoader.prototype = $extend(unveil_loader_ALoader.prototype,{
	callback: function(resolve,reject) {
		var o = this._oNormalizer.apply(this._oGame);
		console.log("src/view/loader/GameStateLoader.hx:72:",o);
		resolve(o);
	}
	,__class__: view_loader_GameStateLoader
});
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $getKeyValueIterator(o) { if( o instanceof Array ) return HxOverrides.keyValueIter(o); else return o.keyValueIterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = String;
String.__name__ = "String";
Array.__name__ = "Array";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_Resource.content = [{ name : "worldmap", data : "DQo8ZGl2IGNsYXNzPSJ3b3JsZG1hcCIgc3R5bGU9ImRpc3BsYXk6IGlubGluZS1ncmlkOyBncmlkLXRlbXBsYXRlLXJvd3M6cmVwZWF0KDFlbSkiPg0KOjogZm9yIG9Eb29yIGluIG9Xb3JsZG1hcC5kb29yQXIgOjoNCgk8ZGl2IGNsYXNzPSJkb29yIDo6IGlmIG9Eb29yLnZlcnRpY2FsIDo6IGhvcml6b250YWwgOjogZW5kaWYgOjoiIHN0eWxlPSJncmlkLWNvbHVtbjogOjogb0Rvb3IucG9zaXRpb24ueCArIDEgOjo7IGdyaWQtcm93OiA6OiBvRG9vci5wb3NpdGlvbi55ICsgMSAgOjo7Ij48L2Rpdj4NCjo6IGVuZGZvciA6Og0KOjogZm9yIG9Sb29tIGluIG9Xb3JsZG1hcC5yb29tQXIgOjoNCgk8ZGl2IGNsYXNzPSJyb29tIA0KCQk6OiBpZiBvUm9vbS5pZCA9PSBvUGxheWVyLnJvb20uaWQgOjogY3VycmVudCA6OiBlbmRpZiA6OiANCgkJOjogaWYgb1Jvb20uYWN0aXZlIDo6IGFjdGl2ZSA6OiBlbmRpZiA6Og0KCQk6OiBpZiBvUm9vbS52aXNpdGVkIDo6IHZpc2l0ZWQgOjogZW5kaWYgOjoiIA0KCQk6OiBpZiBvUm9vbS5hY3RpdmUgOjogZGF0YS1jbGljaz0icm9vbV9tb3ZlIiBkYXRhLXJvb209Ijo6b1Jvb20uaWQ6OiIgOjogZW5kaWYgOjoNCgkJc3R5bGU9ImdyaWQtY29sdW1uOiA6OiBvUm9vbS5wb3NpdGlvbi54ICsgMSAgOjo7IGdyaWQtcm93OiA6OiBvUm9vbS5wb3NpdGlvbi55ICsgMSAgOjo7Ig0KCT48L2Rpdj4NCjo6IGVuZGZvciA6Og0KPC9kaXY+"},{ name : "_main", data : "PGRpdj4xOjAwPC9kaXY+DQo8ZGl2Pg0KCTxidXR0b24gdHlwZT0iYnV0dG9uIiBkYXRhLWNsaWNrPSJlbmRfc2V0dXAiPg0KCQlOZXh0DQoJPC9idXR0b24+DQo8L2Rpdj4NCjxzZWN0aW9uPg0KCTxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+DQoJCTo6IGZvciBvUGxheWVyIGluIHBhZ2UuZ2FtZS5wbGF5ZXJBciA6Og0KCQk6OiByZW5kZXIoZHVuZ2VvbikgOjoNCgkJPGRpdiBjbGFzcz0icm93Ij4NCgkJPGRpdiBjbGFzcz0iY29sLTEyIj4NCgkJCUF0dGFjayBncm91cCA6DQoJCQk8ZGl2IGNsYXNzPSJyb3ciPg0KCQkJOjogZm9yIG9GaWdodGVyIGluIG9QbGF5ZXIuYXR0YWNrR3JvdXAoKSA6Og0KCQkJPGRpdiBjbGFzcz0iY29sIj4NCgkJCQk6OiBvRmlnaHRlci50eXBlLmxhYmVsIDo6DQoJCQk8L2Rpdj4NCgkJCTo6IGVuZGZvciA6Og0KCQkJPC9kaXY+DQoJCTwvZGl2Pg0KCQk8L2Rpdj4NCgkJPGRpdj4NCgkJCTxpbnB1dCBpZD0iaW5wdXQtY29sbGFwc2UtOjppZDo6IiB0eXBlPSJjaGVja2JveCIgLz4gDQoJCQk8bGFiZWwgZm9yPSJpbnB1dC1jb2xsYXBzZS06OmlkOjoiIGNsYXNzPSJidG4iPg0KCQkJCSsNCgkJCTwvbGFiZWw+DQoJCQk8ZGl2IGNsYXNzPSJjb2xsYXBzZWQgZC11bmNoZWNrLW5vbmUiPg0KCQkJCTo6IGZvciBvT3B0aW9uIGluIG9QbGF5ZXIuYXR0YWNrZXJTaG9wT3B0aW9uIDo6DQoJCQkJPGRpdj4NCgkJCQk8YnV0dG9uIGNsYXNzPSJvcHRpb24iIHR5cGU9ImJ1dHRvbiIgDQoJCQkJCWRhdGEtY2xpY2s9ImJ1eV9hdHRhY2tlciINCgkJCQkJZGF0YS1idXk9Ijo6IG9PcHRpb24ubGFiZWwgOjoiDQoJCQkJPg0KCQkJCQk8c3Bhbj4NCgkJCQkJCTxpbWcgY2xhc3M9ImltZy1mbHVpZCIgc3JjPSI6OiBvT3B0aW9uLmljb24gOjoiIC8+DQoJCQkJCTwvc3Bhbj4NCgkJCQkJPHNwYW4+DQoJCQkJCQk6OiBvT3B0aW9uLmxhYmVsIDo6DQoJCQkJCTwvc3Bhbj4NCgkJCQkJPHNwYW4+DQoJCQkJCQk6OiBvT3B0aW9uLmdvbGQgOjogDQoJCQkJCQk8aW1nIHNyYz0iaW1hZ2UvZ29sZC5qcGVnIiAvPg0KCQkJCQk8L3NwYW4+DQoJCQkJCTxzcGFuPg0KCQkJCQkJOjogb09wdGlvbi5zcGFjZSA6Og0KCQkJCQkJPGltZyBzcmM9ImltYWdlL3NwYWNlLmpwZWciIC8+DQoJCQkJCTwvc3Bhbj48YnIvPg0KCQkJCQk6OiByZW5kZXIgZGljZSB3aXRoIHsgZGljZTogb09wdGlvbi5kaWNlIH0gOjoNCgkJCQk8L2J1dHRvbj4NCgkJCQk8L2Rpdj4NCgkJCQk6OiBlbmRmb3IgOjoNCgkJCTwvZGl2Pg0KCQk8L2Rpdj4NCgkJOjogaWYgb1BsYXllci5maWdodCAhPSBudWxsIDo6DQoJCQk6OiByZW5kZXIgZmlnaHQgd2l0aCB7IG9GaWdodDogb1BsYXllci5maWdodCB9ICA6Og0KCQk6OiBlbmRpZiA6Og0KCQkNCgkJOjogZW5kZm9yIDo6DQoJPC9kaXY+DQo8L3NlY3Rpb24+DQo"},{ name : "dice", data : "PHNwYW4gY2xhc3M9InJvdyBuby1ndXR0ZXJzIj4NCjo6IGZvciBvRGljZUZhY2UgaW4gZGljZSA6Og0KPHNwYW4gY2xhc3M9ImNvbC1hdXRvIGRpY2UtOjogb0RpY2VGYWNlLnR5cGUgOjogIj4NCgk6OiBvRGljZUZhY2UudmFsdWUgOjogDQo8L3NwYW4+DQo6OiBlbmRmb3IgOjoNCjwvc3Bhbj4"},{ name : "character", data : "PGRpdiBjbGFzcz0icm93Ij4NCjxkaXYgY2xhc3M9ImNvbC02Ij4NCgk8aW1nIGNsYXNzPSJpbWctZmx1aWQiIHNyYz0iOjogb0NoYXJhY3Rlci50eXBlLmljb24gOjoiIC8+DQo8L2Rpdj4NCjxkaXYgY2xhc3M9ImNvbC02Ij4NCgk6OiBvQ2hhcmFjdGVyLnR5cGUubGFiZWwgOjoNCjwvZGl2Pg0KPGRpdiBjbGFzcz0iIj4NCgk8ZGl2IGNsYXNzPSJwcm9ncmVzcyI+DQoJCTxkaXYgY2xhc3M9InByb2dyZXNzLWJhciIgcm9sZT0icHJvZ3Jlc3NiYXIiIA0KCQkJc3R5bGU9IndpZHRoOiBjYWxjKCA6OiBvQ2hhcmFjdGVyLmhlYWx0aCA6OiAvIDo6IG9DaGFyYWN0ZXIudHlwZS5oZWFsdGhNYXggOjogICogMTAwJSApIg0KCQk+PC9kaXY+DQoJPC9kaXY+DQo8L2Rpdj4NCjwvZGl2Pg"},{ name : "entity_icon", data : "PGltZyBzcmM9Ijo6IHBhdGggOjoiIHN0eWxlPSJjbGlwLXBhdGg6IHJlY3RhbmdsZSg6OiB4IDo6LCA6OiB5IDo6LCB3aWR0aCwgaGVpZ2h0KSIgLz4"},{ name : "fight_fighter", data : "DQo8ZGl2IGNsYXNzPSJyb3ciPg0KPGRpdiBjbGFzcz0iY29sLTYiPg0KCTxpbWcgY2xhc3M9ImltZy1mbHVpZCIgc3JjPSI6OiBvRmlnaHRlci50eXBlLmljb24gOjoiIGRyYWdnYWJsZT0iZmFsc2UiIC8+DQo8L2Rpdj4NCjxkaXYgY2xhc3M9ImNvbC02Ij4NCgk8c3BhbiBjbGFzcz0iZGljZS06OiBvRGljZUZhY2UudHlwZSA6OiI+DQoJCTo6IG9EaWNlRmFjZS52YWx1ZSA6Og0KCTwvc3Bhbj4NCjwvZGl2Pg0KPGRpdiBjbGFzcz0iY29sIj4NCgk8ZGl2IGNsYXNzPSJwcm9ncmVzcyI+DQoJCTxkaXYgY2xhc3M9InByb2dyZXNzLWJhciIgcm9sZT0icHJvZ3Jlc3NiYXIiIHN0eWxlPSJ3aWR0aDogOjogb0ZpZ2h0ZXIuaGVhbHRoUGVyY2VudCA6OiUiPjwvZGl2Pg0KCTwvZGl2Pg0KPC9kaXY+DQo8L2Rpdj4"},{ name : "dungeon", data : "PGRpdiBjbGFzcz0icm93IG5vLWd1dHRlcnMiPg0KOjogZm9yIGlSb29tSWQgPT4gb1Jvb20gaW4gb1BsYXllci5kdW5nZW9uLnJvb21BciA6Og0KPGRpdiBjbGFzcz0iY29sLTYgYmctbGlnaHQiPg0KCTxkaXYgY2xhc3M9InNxdWFyZSI+DQoJPGRpdiBjbGFzcz0iYm94LXJvb20iPg0KCQk8ZGl2IGNsYXNzPSJib3gtcm9vbS13YWxsLXRvcCI+PGRpdiBjbGFzcz0iYm94LXJvb20td2FsbCI+PC9kaXY+PC9kaXY+DQoJCTxkaXYgY2xhc3M9ImJveC1yb29tLXdhbGwtYm90dG9tIj48ZGl2IGNsYXNzPSJib3gtcm9vbS13YWxsIj48L2Rpdj48L2Rpdj4NCgkJPGRpdiBjbGFzcz0iYm94LXJvb20td2FsbC1sZWZ0Ij48ZGl2IGNsYXNzPSJib3gtcm9vbS13YWxsIj48L2Rpdj48L2Rpdj4NCgkJPGRpdiBjbGFzcz0iYm94LXJvb20td2FsbC1yaWdodCI+PGRpdiBjbGFzcz0iYm94LXJvb20td2FsbCI+PC9kaXY+PC9kaXY+DQoJCTxkaXYgY2xhc3M9InJvdyI+DQoJCQk6OiBmb3Igb01vbnN0ZXIgaW4gb1Jvb20uZmlnaHRlckFyIDo6DQoJCQk8ZGl2IGNsYXNzPSJjb2wtNCBpbmZvLW1vbnN0ZXIgYmctd2hpdGUgbWItMiI+DQoJCQkJPGRpdj4NCgkJCQkJPGltZyBjbGFzcz0iaW1nLWZsdWlkIiBzcmM9Ijo6IG9Nb25zdGVyLnR5cGUuaWNvbiA6OiIgLz4NCgkJCQk8L2Rpdj4NCgkJCQk8ZGl2Pg0KCQkJCQk6OiBvTW9uc3Rlci50eXBlLmxhYmVsIDo6DQoJCQkJPC9kaXY+DQoJCQkJPGRpdiBjbGFzcz0iZ2F1Z2UtaGVhbHRoIj4NCgkJCQkJPGRpdiBjbGFzcz0icHJvZ3Jlc3MiPg0KCQkJCQkJPGRpdiBjbGFzcz0icHJvZ3Jlc3MtYmFyIiByb2xlPSJwcm9ncmVzc2JhciIgc3R5bGU9IndpZHRoOiBjYWxjKCA6OiBvTW9uc3Rlci5oZWFsdGggOjogLyA6OiBvTW9uc3Rlci50eXBlLmhlYWx0aE1heCA6OiAgKiAxMDAlICkiPjwvZGl2Pg0KCQkJCQk8L2Rpdj4NCgkJCQk8L2Rpdj4NCgkJCQk8ZGl2Pg0KCQkJCQk8YnV0dG9uIHR5cGU9ImJ1dHRvbiI+DQoJCQkJCQlTZWxsDQoJCQkJCQk8aW1nIHNyYz0iaW1hZ2UvZ29sZC5qcGVnIiANCgkJCQkJCS8+Jm5ic3A7Ojogb01vbnN0ZXIudHlwZS5nb2xkIDo6DQoJCQkJCTwvYnV0dG9uPg0KCQkJCTwvZGl2Pg0KCQkJPC9kaXY+DQoJCQk6OiBlbmRmb3IgOjoNCgkJCTxpbnB1dCBpZD0iaW5wdXQtY29sbGFwc2UtOjppUm9vbUlkOjoiIGNsYXNzPSJkLW5vbmUiIHR5cGU9ImNoZWNrYm94IiAvPiANCgkJCTxsYWJlbCBmb3I9ImlucHV0LWNvbGxhcHNlLTo6aVJvb21JZDo6IiBjbGFzcz0iYnRuLXNlY29uZGFyeSI+DQoJCQkJKw0KCQkJPC9sYWJlbD4NCgkJCTxkaXYgY2xhc3M9InJvdyBjb2xsYXBzZWQgZC11bmNoZWNrLW5vbmUiPg0KCQkJCTo6IGZvciBvT3B0aW9uIGluIG9QbGF5ZXIuZHVuZ2Vvbi5zaG9wT3B0aW9uQXIgOjoNCgkJCQk8ZGl2IGNsYXNzPSJjb2wtNCI+DQoJCQkJPGJ1dHRvbiBjbGFzcz0iYnRuLXNlY29uZGFyeSIgdHlwZT0iYnV0dG9uIiANCgkJCQkJZGF0YS1jbGljaz0iYnV5Ig0KCQkJCQlkYXRhLWJ1eT0iOjogb09wdGlvbi5sYWJlbCA6OiINCgkJCQkJZGF0YS1yb29tPSI6OiBpUm9vbUlkIDo6Ig0KCQkJCT4NCgkJCQkJPHNwYW4+DQoJCQkJCQk8aW1nIGNsYXNzPSJpbWctZmx1aWQiIHNyYz0iOjogb09wdGlvbi5pY29uIDo6IiAvPg0KCQkJCQk8L3NwYW4+DQoJCQkJCTxzcGFuPg0KCQkJCQkJOjogb09wdGlvbi5sYWJlbCA6Og0KCQkJCQk8L3NwYW4+DQoJCQkJCTxzcGFuPg0KCQkJCQkJOjogb09wdGlvbi5nb2xkIDo6IA0KCQkJCQkJPGltZyBzcmM9ImltYWdlL2dvbGQuanBlZyIgLz4NCgkJCQkJPC9zcGFuPg0KCQkJCQk8c3Bhbj4NCgkJCQkJCTo6IG9PcHRpb24uc3BhY2UgOjoNCgkJCQkJCTxpbWcgc3JjPSJpbWFnZS9zcGFjZS5qcGVnIiAvPg0KCQkJCQk8L3NwYW4+PGJyLz4NCgkJCQkJOjogcmVuZGVyIGRpY2Ugd2l0aCB7IGRpY2U6IG9PcHRpb24uZGljZSB9IDo6DQoJCQkJPC9idXR0b24+DQoJCQkJPC9kaXY+DQoJCQkJOjogZW5kZm9yIDo6DQoJCQk8L2Rpdj4NCgkJPC9kaXY+DQoJPC9kaXY+DQoJPC9kaXY+DQo8L2Rpdj4NCjo6IGVuZGZvciA6Og0KPC9kaXY+"},{ name : "fight", data : "DQo8c2VjdGlvbiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4NCgk8ZGl2IGNsYXNzPSJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciI+DQoJCTxkaXYgY2xhc3M9ImNvbC1hdXRvIHRleHQtY2VudGVyIj4NCgkJCTxkaXYgY2xhc3M9IiI+DQoJCQkJc3RyZW5ndGgNCgkJCTwvZGl2Pg0KCQkJPGRpdiBjbGFzcz0icm93Ij4NCgkJCTxkaXYgY2xhc3M9ImNvbC02Ij4NCgkJCQlWDQoJCQk8L2Rpdj4NCgkJCTxkaXYgY2xhc3M9ImNvbC02Ij4NCgkJCQleDQoJCQk8L2Rpdj4NCgkJCTxkaXYgY2xhc3M9ImNvbC00Ij4NCgkJCQltYWdpYw0KCQkJPC9kaXY+DQoJCQk8ZGl2IGNsYXNzPSJjb2wtNCI+DQoJCQkJPg0KCQkJPC9kaXY+DQoJCQk8ZGl2IGNsYXNzPSJjb2wtNCI+DQoJCQkJYWdpbGl0eQ0KCQkJPC9kaXY+DQoJCQk8L2Rpdj4NCgkJPC9kaXY+DQoJPC9kaXY+DQoJOjogZm9yIGlFbmdhZ2VEZWZJZCA9PiBvRW5nYWdlbWVudCBpbiBvRmlnaHQuZW5nYWdlQXIgOjoNCgk8ZGl2IGNsYXNzPSJyb3cgdGV4dC1jZW50ZXIiPg0KCTxkaXYgY2xhc3M9ImNvbC02IGJvcmRlciI+DQoJCTo6IHJlbmRlciBmaWdodF9maWdodGVyIHdpdGggeyBvRmlnaHRlcjogb0VuZ2FnZW1lbnQuZGVmZW5kZXJfYWN0aW9uLmZpZ2h0ZXIsIG9EaWNlRmFjZTogb0VuZ2FnZW1lbnQuZGVmZW5kZXJfYWN0aW9uLmRpY2VfZmFjZSB9IDo6IA0KCTwvZGl2Pg0KCTxkaXYgY2xhc3M9ImNvbC02IiBkYXRhLWZpZ2h0ZXI9Ijo6IG9FbmdhZ2VtZW50LmRlZmVuZGVyX2FjdGlvbi5maWdodGVyLmlkIDo6Ij4NCgkJOjogZm9yIGlFbmdhZ2VBdHRJZCA9PiBvRW5nYWdlQXR0IGluIG9FbmdhZ2VtZW50LmF0dGFja2VyX2VuZ2FnZW1lbnRfYXIgOjoNCgkJPGRpdiBjbGFzcz0icm93IGJvcmRlciBqcy1kcm9wem9uZSIgZGF0YS1kcm9wLWFjdGlvbj0ic3dhcF9lbmdhZ2VtZW50IiANCgkJCWRyYWdnYWJsZT0idHJ1ZSIgDQoJCQlkYXRhLWZpZ2h0ZXI9Ijo6IG9FbmdhZ2VBdHQuYXR0YWNrZXJfYWN0aW9uLmZpZ2h0ZXIuaWQgOjoiDQoJCQlkYXRhLWVuZ2FnZV9pZD0iOjogaUVuZ2FnZURlZklkIDo6LTo6IGlFbmdhZ2VBdHRJZCA6OiIgDQoJCQlvbmRyYWdzdGFydD0iZXZlbnQuZGF0YVRyYW5zZmVyLnNldERhdGEoJ3RleHQvcGxhaW4nLG51bGwpIg0KCQk+DQoJCTxkaXYgY2xhc3M9ImNvbC1hdXRvIHB4LTMiPg0KCQkJOjogIG9FbmdhZ2VBdHQuZGFtYWdlIDo6PGJyLz4NCgkJCTo6IGlmIG9FbmdhZ2VBdHQuZGFtYWdlIDwgMCA6Og0KCQkJCSZyYXJyOw0KCQkJOjogZW5kaWYgOjoNCgkJCTo6IGlmIG9FbmdhZ2VBdHQuZGFtYWdlID4gMCA6Og0KCQkJCSZsYXJyOw0KCQkJOjogZW5kaWYgOjoNCgkJPC9kaXY+DQoJCTxkaXYgY2xhc3M9ImNvbCI+DQoJCQk6OiByZW5kZXIgZmlnaHRfZmlnaHRlciB3aXRoIHsgb0ZpZ2h0ZXI6IG9FbmdhZ2VBdHQuYXR0YWNrZXJfYWN0aW9uLmZpZ2h0ZXIsIG9EaWNlRmFjZTogb0VuZ2FnZUF0dC5hdHRhY2tlcl9hY3Rpb24uZGljZV9mYWNlIH0gOjoNCgkJPC9kaXY+DQoJCTwvZGl2Pg0KCQk6OiBlbmRmb3IgOjoNCgkJOjogaWYgb0VuZ2FnZW1lbnQuYXR0YWNrZXJfZW5nYWdlbWVudF9hci5sZW5ndGggPCBvRmlnaHQubWF4T3ZlcmZsb3cgOjoNCgkJPGRpdiBjbGFzcz0icm93IGJvcmRlciBqcy1kcm9wem9uZSBzaG93LW9uZHJhZyIgDQoJCQlkYXRhLWRyb3AtYWN0aW9uPSJzZXRfZW5nYWdlbWVudCIgDQoJCQlkYXRhLWVuZ2FnZV9pZD0iOjogaUVuZ2FnZURlZklkIDo6Ig0KCQk+DQoJCTxkaXYgY2xhc3M9ImNvbC1hdXRvIHB4LTMgcHktMyI+DQoJCQktDQoJCTwvZGl2Pg0KCQk8L2Rpdj4NCgkJOjogZW5kaWYgOjoNCgk8L2Rpdj4NCgk8L2Rpdj4NCgk6OiBlbmRmb3IgOjoNCgk8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgZGF0YS1jbGljaz0iY29tYmF0X25leHQiPk5leHQ8L2J1dHRvbj4NCjwvc2VjdGlvbj4"},{ name : "main", data : "OjogZm9yIG9QbGF5ZXIgaW4gcGFnZS5nYW1lLnBsYXllckFyIDo6DQo8c2VjdGlvbj4NCgk8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQiPg0KCQkNCgkJPGRpdiBjbGFzcz0icm93Ij4NCgkJPGRpdiBjbGFzcz0iY29sLTEyIj4NCgkJCUdyb3VwIDoNCgkJCTxkaXYgY2xhc3M9InJvdyI+DQoJCQk6OiBmb3Igb0ZpZ2h0ZXIgaW4gb1BsYXllci5hdHRhY2tHcm91cCgpIDo6DQoJCQk8ZGl2IGNsYXNzPSJjb2wtNCBpbmZvLW1vbnN0ZXIgbWItMiI+DQoJCQkJPGRpdj4NCgkJCQkJPGltZyBjbGFzcz0iaW1nLWZsdWlkIiBzcmM9Ijo6IG9GaWdodGVyLnR5cGUuaWNvbiA6OiIgLz4NCgkJCQk8L2Rpdj4NCgkJCQk8ZGl2Pg0KCQkJCQk6OiBvRmlnaHRlci50eXBlLmxhYmVsIDo6DQoJCQkJPC9kaXY+DQoJCQkJPGRpdiBjbGFzcz0iIj4NCgkJCQkJPGRpdiBjbGFzcz0icHJvZ3Jlc3MiPg0KCQkJCQkJPGRpdiBjbGFzcz0icHJvZ3Jlc3MtYmFyIGJnLXN1Y2Nlc3MiIHJvbGU9InByb2dyZXNzYmFyIiBzdHlsZT0id2lkdGg6IGNhbGMoIDo6IG9GaWdodGVyLmhlYWx0aCA6OiAvIDo6IG9GaWdodGVyLnR5cGUuaGVhbHRoTWF4IDo6ICAqIDEwMCUgKSI+DQoJCQkJCQkJOjogb0ZpZ2h0ZXIuaGVhbHRoIDo6IC8gOjogb0ZpZ2h0ZXIudHlwZS5oZWFsdGhNYXggOjoNCgkJCQkJCTwvZGl2Pg0KCQkJCQk8L2Rpdj4NCgkJCQk8L2Rpdj4NCgkJCQk8ZGl2IGNsYXNzPSJweS0xIj4NCgkJCQkJOjogcmVuZGVyIGRpY2Ugd2l0aCB7IGRpY2U6IG9GaWdodGVyLnR5cGUuZGljZSB9IDo6DQoJCQkJPC9kaXY+DQoJCQk8L2Rpdj4NCgkJCTo6IGVuZGZvciA6Og0KCQkJPC9kaXY+DQoJCTwvZGl2Pg0KCQk8ZGl2IGlkPSJ3cmFwcGVyLXdvcmxkbWFwIiBjbGFzcz0iY29sLTEyIj4NCgkJCTo6IHJlbmRlciB3b3JsZG1hcCB3aXRoIHsgb1dvcmxkbWFwOiAgcGFnZS5nYW1lLndvcmxkbWFwLCBvUGxheWVyOiBvUGxheWVyIH0gOjoNCgkJPC9kaXY+DQoJCTwvZGl2Pg0KCQkNCgkJDQoJCQ0KCTwvZGl2Pg0KPC9zZWN0aW9uPg0KOjogaWYgb1BsYXllci5maWdodCAhPSBudWxsIDo6DQo8c2VjdGlvbj4NCgk6OiByZW5kZXIgZmlnaHQgd2l0aCB7IG9GaWdodDogb1BsYXllci5maWdodCB9ICA6Og0KPC9zZWN0aW9uPg0KOjogZW5kaWYgOjoNCjo6IGVuZGZvciA6Og0K"}];
js_Boot.__toStr = ({ }).toString;
haxe_Template.splitter = new EReg("(::[A-Za-z0-9_ ()&|!+=/><*.\"-]+::|\\$\\$([A-Za-z0-9_-]+)\\()","");
haxe_Template.expr_splitter = new EReg("(\\(|\\)|[ \r\n\t]*\"[^\"]*\"[ \r\n\t]*|[!+=/><*.&|-]+)","");
haxe_Template.expr_trim = new EReg("^[ ]*([^ ]+)[ ]*$","");
haxe_Template.expr_int = new EReg("^[0-9]+$","");
haxe_Template.expr_float = new EReg("^([+-]?)(?=\\d|,\\d)\\d*(,\\d*)?([Ee]([+-]?\\d+))?$","");
haxe_Template.globals = { };
haxe_Template.hxKeepArrayIterator = new haxe_iterators_ArrayIterator([]);
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
unveil_template_Compiler._ELSE = "else";
unveil_template_Compiler._ENDIF = "endif";
unveil_template_Compiler._ENDFOR = "endfor";
unveil_template_Compiler._REGEXP_INTEGER = new EReg("^\\d+$","");
unveil_template_Compiler._REGEXP_FLOAT = new EReg("^[\\d.]+$","");
unveil_template_Compiler._aUnaryOperator = [new unveil_template_UnaryOperator("!",function(a) {
	return !a;
}),new unveil_template_UnaryOperator("-",function(a) {
	return -a;
})];
unveil_template_Compiler._aOperator = [new unveil_template_Operator("%",function(a,b) {
	return a % b;
}),new unveil_template_Operator("*",function(a,b) {
	return a * b;
}),new unveil_template_Operator("/",function(a,b) {
	return a / b;
}),new unveil_template_Operator("+",function(a,b) {
	return a + b;
}),new unveil_template_Operator("-",function(a,b) {
	return a - b;
}),new unveil_template_Operator("==",function(a,b) {
	return a == b;
}),new unveil_template_Operator("!=",function(a,b) {
	return a != b;
}),new unveil_template_Operator("<",function(a,b) {
	return a < b;
}),new unveil_template_Operator("<=",function(a,b) {
	return a <= b;
}),new unveil_template_Operator(">",function(a,b) {
	return a > b;
}),new unveil_template_Operator(">=",function(a,b) {
	return a >= b;
}),new unveil_template_Operator("...",function(a,b) {
	return new IntIterator(a,b);
}),new unveil_template_Operator("&&",function(a,b) {
	if(a) {
		return b;
	} else {
		return false;
	}
}),new unveil_template_Operator("||",function(a,b) {
	if(!a) {
		return b;
	} else {
		return true;
	}
})];
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
